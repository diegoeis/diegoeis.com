<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>diegoeis.com</title>
  <subtitle>Blog do Diego Eis</subtitle>
  <id>http://diegoeis.com/</id>
  <link href="http://diegoeis.com/"/>
  <link href="http://diegoeis.com/feed.xml" rel="self"/>
  <updated>2016-10-12T21:00:00-03:00</updated>
  <author>
    <name>Diego Eis</name>
  </author>
  <entry>
    <title>Anotações da palestra do Dave Ragget na Web.br 2016</title>
    <link rel="alternate" href="http://diegoeis.com/anotacoes-da-palestra-do-dave-ragget-na-web-br-2016.html"/>
    <id>http://diegoeis.com/anotacoes-da-palestra-do-dave-ragget-na-web-br-2016.html</id>
    <published>2016-10-12T21:00:00-03:00</published>
    <updated>2016-10-13T10:47:43-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Essas são as minhas anotações da palestra Internet das Coisas na Web (IoTw) que o Dave Ragget fez no evento Web.br 2016. Cheguei meio pro final, não deu pra anotar muita coisa.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Challenges for IoT and Big Data&lt;/li&gt;
&lt;li&gt;Muitos sensores geram a quantidade de dados.&lt;/li&gt;
&lt;li&gt;A segurança na era do IoT preocupa a todos&lt;/li&gt;
&lt;li&gt;Uma segurança forte depende de compreensao e aderente às novas práticas&lt;/li&gt;
&lt;li&gt;Quando temos um dispositivo, nós precisamos ter confiança entre quem está nos dando esse dispositivo, isso é necessário para que a IoT funcione de verdade no nível de segurança&lt;/li&gt;
&lt;li&gt;É necessário assegurar que os sistemas que rodam no IoT sejam seguros, não apenas sobre invasões e ataques, mas também fisicamente, como por exemplo num carro: você precisa que esse carro seja seguro o tempo inteiro, até mesmo houver uma falha no sistema.&lt;/li&gt;
&lt;li&gt;Segurança, Confiança, Resiliência.&lt;/li&gt;
&lt;li&gt;Privacidade é uma área muito importante na área de IoT&lt;/li&gt;
&lt;li&gt;IoT tem um grande potencial para troca informações pessoais, entre indivíduos e os dispositivos. Há um risco direto para qualquer indivíduo ter seus dados pessoais roubados por criminosos, empresas ou até o governo.&lt;/li&gt;
&lt;li&gt;As empresas precisam aderir a melhores práticas para evitar danos na sua reputação, caso dados pessoais de seus clientes sejam roubados&lt;/li&gt;
&lt;li&gt;É necessário também criar um conceito de espaço pessoal virtual, onde indivíduos tem respeito e entendem a importância da não utilização dos dados pessoais de outros indivíduos&lt;/li&gt;
&lt;li&gt;O HTTP não é a solução para tudo. Ele é bom para usarmos como modo push ou pull na internet de hoje e em dia. &lt;/li&gt;
&lt;li&gt;Em IoT precisamos fazer streaming por exemplo, de um dispositivo para vários clientes, aí entra o Web Sockets, que permite essa comunicação de um pra muitos de forma rápida. &lt;/li&gt;
&lt;li&gt;Se voltarmos lá no início da internet, preocupações com segurança da privacidade não era um foco.&lt;/li&gt;
&lt;li&gt;As pessoas hoje estão experimentando a IoT, e essa preocupação com a segurança tem aumentado. Existe uma &lt;a href="https://iotsecurityfoundation.org"&gt;Fundação de Segurança da Internet das Coisas&lt;/a&gt;. Hoje estamos bem no início sobre esse assunto… Estamos na fase que envolve concientização das pessoas e das empresas.&lt;/li&gt;
&lt;li&gt;Nesse início, as empresas tentarão controlar esse mercado, como naturalmente acontece. Mesmo assim, a centralização dos dispositivos de uma empresa apenas não é um problema.&lt;/li&gt;
&lt;li&gt;A W3C não entra em questões de política, por isso ela não pode regular exatamente o que os governos estão fazendo, mas todos os governos precisam discutir com a população sobre como eles podem implementar leis que funcionem num ambiente como esse que está por vir&lt;/li&gt;
&lt;li&gt;Como a retrocompatibilidade funcionará no mundo da IoT? Essa é uma das maravilhas da internet de hoje e como funciona isso na IoT?&lt;/li&gt;
&lt;li&gt;A escalabilidade tanto no tempo, como nas funcionalidades, é importante para que haja a retrocompatibilidade de arquiteturas e linguagens. É por isso que a formação de camadas na arquitetura é importante. Os Scripts nos aplicativos precisam funcionar nos dispositivos de amanha. &lt;/li&gt;
&lt;li&gt;Se um protocolo deixa de ser usado, como fazemos? É necessário uma camada de metadados para que essa retrocompatibilidade das funcionalidade, protocolos, linguagens etc…&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Um pouco sobre a experiência de ir trabalhar sem carro</title>
    <link rel="alternate" href="http://diegoeis.com/um-pouco-sobre-a-experiencia-de-ir-trabalhar-sem-carro.html"/>
    <id>http://diegoeis.com/um-pouco-sobre-a-experiencia-de-ir-trabalhar-sem-carro.html</id>
    <published>2016-09-21T21:00:00-03:00</published>
    <updated>2016-09-22T22:05:44-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Faz meses que tenho deixado o carro em casa e passado a usar transporte público para ir trabalhar. Não fiz isso por causa do valor que estou economizando por mês (que é bem pouco), mas por uma série de outros motivos.&lt;/p&gt;

&lt;p&gt;Desde o dia que eu deixei de usar o carro, consegui ler algo em torno de 22 livros. &lt;/p&gt;

&lt;div id="gr_challenge_3890" style="border: 2px solid #EBE8D5; border-radius:10px; padding: 0px 7px 0px 7px; max-width:230px; min-height: 100px"&gt;
  &lt;div id="gr_challenge_progress_body_3890" style="font-size: 12px; font-family: georgia,serif;line-height: 18px"&gt;
    &lt;h3 style="margin: 4px 0 10px; font-weight: normal; text-align: center"&gt;
      &lt;a style="text-decoration: none; font-family:georgia,serif;font-style:italic; font-size: 1.1em" href="https://www.goodreads.com/challenges/3890-2016-reading-challenge"&gt;2016 Reading Challenge&lt;/a&gt;
    &lt;/h3&gt;
        &lt;div class="challengePic"&gt;
          &lt;a href="https://www.goodreads.com/challenges/3890-2016-reading-challenge"&gt;&lt;img alt="2016 Reading Challenge" style="float:left; margin-right: 10px; border: 0 none" src="https://d2arxad8u2l0g7.cloudfront.net/challenges/1451432479p2/3890.jpg" /&gt;&lt;/a&gt;
        &lt;/div&gt;
      &lt;div&gt;
        &lt;a href="https://www.goodreads.com/user/show/50891723-diego-eis"&gt;Diego&lt;/a&gt; has
            completed his goal of reading
            9 books in
            2016!
      &lt;/div&gt;
      &lt;div style="width: 100px; margin: 4px 5px 5px 0; float: left; border: 1px solid #382110; height: 8px; overflow: hidden; background-color: #FFF"&gt;
        &lt;div style="width: 100%; background-color: #D7D2C4; float: left"&gt;&lt;span style="visibility:hidden"&gt;hide&lt;/span&gt;&lt;/div&gt;
      &lt;/div&gt;
      &lt;div style="font-family: arial, verdana, helvetica, sans-serif;font-size:90%"&gt;
        &lt;a href="https://www.goodreads.com/user_challenges/3877191"&gt;22 of 9 (100%)&lt;/a&gt;
      &lt;/div&gt;
        &lt;div style="text-align: right;"&gt;
          &lt;a style="text-decoration: none; font-size: 10px;" href="https://www.goodreads.com/user_challenges/3877191"&gt;view books&lt;/a&gt;
        &lt;/div&gt;
  &lt;/div&gt;
  &lt;script src="https://www.goodreads.com/user_challenges/widget/50891723-diego-eis?challenge_id=3890&amp;v=2"&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href="https://www.goodreads.com/user_challenges/3877191"&gt;Link para o GoodReads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Além disso, estou bem menos estressado. Mesmo pegando algumas vezes o ônibus muito cheio ou tendo que esperar um bocado nos pontos. O que aconteceu é que eu me chateio facilmente com motoristas lerdos, pessoas imprudentes ou simplesmente fico cansado de estar parado por longos períodos no transito. O caminho &lt;strong&gt;casa&lt;/strong&gt; &amp;gt; &lt;strong&gt;trabalho&lt;/strong&gt; &amp;gt; &lt;strong&gt;casa&lt;/strong&gt; não é muito complexo e é praticamente uma reta, mas são 15km com vários pontos de parada.&lt;/p&gt;

&lt;h2&gt;O tempo&lt;/h2&gt;

&lt;p&gt;O tempo que eu passava no carro variava entre 1h a 1h20. Com o trânsito muito bom, consigo levar 45 minutos até trabalho. Mas isso é raro e só é possível em horários alternativos. De ônibus, consigo levar de 1h a 1h20 também. E nesse tempo, como falei, aproveito para ler livros, ler emails, ouvir podcasts, ouvir músicas ou simplesmente fico pensando na minha vida feliz. Isso tudo contribui para que eu torne o trajeto mais útil e menos estressante.&lt;/p&gt;

&lt;p&gt;Para me ajudar na adaptação, usei um aplicativo chamado Moovit. Ele me ajudou a encontrar várias linhas de ônibus que me fizeram economizar 20 minutos no trajeto casa &amp;gt; trabalho, reduzindo de 1h20 para 1h de viagem.&lt;/p&gt;

&lt;p&gt;A vantagem nesse caso foi conseguir basicamente 2 horas extras para leitura e fazer qualque outra atividade (inclusive jogar Hearthstone e Clash Royale). Comecei a assistir muito mais vídeos no TED também, além de conseguir escrever e esboçar artigos pelo celular. &lt;/p&gt;

&lt;h2&gt;Gasto&lt;/h2&gt;

&lt;p&gt;O gasto não foi a principal vantagem, já que não economizei o budget mensal planejado. Eu estava gastando algo em torno de R$350 por mês de gasolina. Hoje, R$167 desse valor é para pagar a passagem do ônibus, o resto eu coloco de gasolina, quando necessário. Eu não cheguei a economizar mensalmente, mas consegui atrasar a revisão do carro em 2 meses, já que o limite de quilometragem não foi alcançado.&lt;/p&gt;

&lt;p&gt;Eu costumo ir ao cinema com a minha mulher durante a semana. O percurso é mais ou menos esse:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;casa (ônibus) trabalho (ônibus) shopping (uber) casa&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eu troquei os R$20 de estacionamento do shopping, pelo Uber, que dá o mesmo valor. &lt;/p&gt;

&lt;h2&gt;Por que não me desfiz do carro?&lt;/h2&gt;

&lt;p&gt;Eu não me desfiz do carro, por que não seria inteligente. De fim de semana, uso bastante o carro, já que saimos muito e visitamos muita gente. Além de que gostamos de viajar e nesse caso, o carro é bastante útil. Acho que a ideia de manter o carro em casa e usar outro modelo de transporte me ajudou a entender que não existe um meio de transporte perfeito. Dá para usar carro, Uber, bicicleta, ônibus e metrô de acordo com o trajeto e o seu planejamento.&lt;/p&gt;

&lt;p&gt;Durante muito tempo eu ouço pessoas com o discurso totalmente contra o carro e a favor da bicicleta (que não é uma opção real para todo mundo). Discordo totalmente dessa opinião. O mais inteligente é usar os vários tipos de modalidades de acordo com a sua necessidade no momento.&lt;/p&gt;

&lt;p&gt;Eu sei que em alguns lugares de São Paulo, o transporte é bem precário. Os ônibus são ruins, as linhas não são bem planejadas, causando lotação excessiva nos ônibus e também nos metros, já que a malha metroviária é bem restrita comparado com outras cidades do mundo, embora seja a maior em extensão no Brasil.&lt;/p&gt;

&lt;p&gt;Logo, me desfazer do carro seria bobeira, já que posso contar com ele para viajar e fazer passeios mais longos. O que planejo agora é ter, talvez, um carro menor, que gaste menos gasolina.&lt;/p&gt;

&lt;p&gt;Com essas adaptações, mais a facilidade de trabalhar em casa, fazendo alguns dias de home office, consigo ter inúmeras vantagens. Além de ficar mais saudável e normalmente mais disposto.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CSS - Cansei de Ser Simples – Podcast Hipsters 09</title>
    <link rel="alternate" href="http://diegoeis.com/podcast-css-cansei-de-ser-simples-hipsters-09.html"/>
    <id>http://diegoeis.com/podcast-css-cansei-de-ser-simples-hipsters-09.html</id>
    <published>2016-09-12T21:00:00-03:00</published>
    <updated>2016-09-22T22:02:37-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;O Paulo Silveira e o Sergio Lopes da Caelum Alura me convidaram esses dias para falar um pouco sobre CSS no podcast sobre tecnologia Hipsters! &lt;/p&gt;

&lt;p&gt;Nesse episódio, falamos um pouco sobre CSS, sua história, organização de arquivos, pré-processadores e várias coisas que envolvem essa coisa que amo de paixão, o CSS.&lt;/p&gt;

&lt;p&gt;Quer ouvir, dá o play aí!&lt;/p&gt;

&lt;iframe width="320" height="100" src="http://hipsters.tech/?powerpress_embed=373-podcast&amp;amp;powerpress_player=mediaelement-audio" frameborder="0" scrolling="no"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>BrazilJS 2016 - Sobre o básico de JSON-LD e Web Semântica</title>
    <link rel="alternate" href="http://diegoeis.com/braziljs-2016-sobre-o-basico-de-json-ld-e-web-semantica.html"/>
    <id>http://diegoeis.com/braziljs-2016-sobre-o-basico-de-json-ld-e-web-semantica.html</id>
    <published>2016-08-28T21:00:00-03:00</published>
    <updated>2016-09-22T22:02:37-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Esses são os slides da minha palestra feita no BrazilJS de 2016.&lt;/p&gt;

&lt;iframe src="//www.slideshare.net/slideshow/embed_code/key/qRDOIDTV8mbs7C" width="595" height="485" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen&gt; &lt;/iframe&gt;

&lt;p&gt;&lt;img src="assets/images/braziljs-2016/2016-08-26-15.53.27.jpg" /&gt;
&lt;img src="assets/images/braziljs-2016/2016-08-26-15.57.04.jpg" /&gt;
&lt;img src="assets/images/braziljs-2016/2016-08-26-16.05.29.jpg" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Dia 2 - CSM - ScrumAlliance - AdaptWorks</title>
    <link rel="alternate" href="http://diegoeis.com/dia-2-csm-scrumalliance-adaptworks.html"/>
    <id>http://diegoeis.com/dia-2-csm-scrumalliance-adaptworks.html</id>
    <published>2016-08-15T21:00:00-03:00</published>
    <updated>2016-08-18T00:04:15-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Anotações do segundo dia do treinamento CSM feito na AdaptWorks. As &lt;a href="/csm-scrumalliance-adaptworks-dia-1.html"&gt;anotações do dia 1 está aqui&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Product Owner&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;O PO tem contato forte com o cliente e usuários&lt;/li&gt;
&lt;li&gt;O PO não precisa ser o cliente, mas dependendo do cliente, pode ter o papel do PO.&lt;/li&gt;
&lt;li&gt;talvez numa empresa que esteja no estado da arte do relacionamento com o cliente, se torna interessante que eles sejam o Product Owner. Eles conhecem o projeto, eles entendem que é o dinheiro deles que está em jogo, mas eles teriam que conhecer Agile e Scrum ou pelo estarem dispostos&lt;/li&gt;
&lt;li&gt;O Product Owner garante se o produto está certo e que vai satisfazer o cliente/usuário&lt;/li&gt;
&lt;li&gt;O PO é responsável pela visão do produto&lt;/li&gt;
&lt;li&gt;Dessa visão combinada entre PO e Cliente, surge o coração do Scrum, que se chama Product Backlog&lt;/li&gt;
&lt;li&gt;se o Backlog está muito tempo parado, quer dizer que o PO parou de pensar em novas funcionalidades, ele parou de pensar nos próximos passos para o produto&lt;/li&gt;
&lt;li&gt;SM precisa perguntar: qual problema essa funcionalidade vai solucionar? Tem outro produto no mercado que resolve esse problema? Como eles resolvem? Por que eles resolvem diferente de você?&lt;/li&gt;
&lt;li&gt;gerencia os stakeholders. Os stakeholders veem o PO como o responsável pelo projeto, é quem eles procuram pra pedir contas&lt;/li&gt;
&lt;li&gt;PO conversa com os stakeholders sobre budget, report de projeto&lt;/li&gt;
&lt;li&gt;do relacionamento entre DevTeam e PO, surge o Sprint Backlog&lt;/li&gt;
&lt;li&gt;O Sprint Backlog válida as tarefas. O Dev Team pergunta pra o PO se a tarefa pode ser aceita&lt;/li&gt;
&lt;li&gt;ele dá e recebe feedback sobre as tarefas. Por isso que há mudança de escopo. &lt;/li&gt;
&lt;li&gt;Em vez de esperar pra ter o contato no final da sprint, tenha o contato no inicio, pra poder modificar rápido&lt;/li&gt;
&lt;li&gt;Através dessa comunicação, o PO aceita ou rejeita entregas. Critérios de aceite devem estar bem claras para que o time cumpra os requisitos&lt;/li&gt;
&lt;li&gt;O PO é extamente o que o Founder faz em uma startup.&lt;/li&gt;
&lt;li&gt;A estrutura do Scrum é uma estrutura enxuta de startup&lt;/li&gt;
&lt;li&gt;O ScrumMaster faz apenas o gerenciamento do processo e pessoas. Onde nessas conversas do PO o Scrum Master está? Em todas, por tem pessoas em todos os lugares&lt;/li&gt;
&lt;li&gt;scrum master entende sobre discussão e mediação de consenso. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dev Team&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Quando você tem uma estrutura organizacional onde os times são funcionais, você ganha:

&lt;ul&gt;
&lt;li&gt;em produtividade, porque o time é especializada em sua responsabilidade &lt;/li&gt;
&lt;li&gt;aprendizado especializado. &lt;/li&gt;
&lt;li&gt;mas você precisa que a cadeia inteira funcione pra gerar valor, por que times assim não entregam valor sozinhas, elas dependem de outros&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;se você tem um time multifuncional ou equipes de valor, você tem todas as skills para gerar valor diretamente para o cliente

&lt;ul&gt;
&lt;li&gt;ganha na geração de valor&lt;/li&gt;
&lt;li&gt;potencializa aprendizado generalista&lt;/li&gt;
&lt;li&gt;Em compensação, os integrantes desse time precisam entender um pouco mais sobre as skills de outros integrantes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Development teams em scrum, funcionam em times funcionais&lt;/li&gt;
&lt;li&gt;quanto mais tradicional for sua empresa, mais difícil de implementar o modelo de equipes de valor/multidisciplinar &lt;/li&gt;
&lt;li&gt;Foco do Scrum não é produtividade, é entrega de valor. Você deve buscar produtividade, dentro da geração de valor&lt;/li&gt;
&lt;li&gt;McDonalds entre muito hambúrguer, com sabor razoável, prefere produtividade, repetição&lt;/li&gt;
&lt;li&gt;Hamburgueria Gourmet entrega hambúrguer esplêndido, único, prefere entrega de valor&lt;/li&gt;
&lt;li&gt;Se uma hamburgueria gourmet demora 2 minutos pra entregar o lanche, você vai achar estranho.&lt;/li&gt;
&lt;li&gt;Se o McDonalds demorar mais do que 15 minutos pra entregar o sanduíche, você vai achar estranho&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No Scrum você procura entregar, de forma produtiva, num âmbito de time, não individualmente. Você mede a entrega do time, não do indivíduo.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Isso não quer dizer que todos do time devem ser generalistas e devem saber tudo. &lt;strong&gt;O time é multidisciplinar e não os integrantes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Quando o integrante é compartilhado, ele não tem comprometimento em nenhum dos projetos.&lt;/li&gt;
&lt;li&gt;o time precisa ser auto-organizado&lt;/li&gt;
&lt;li&gt;Auto-organizacao não tem nenhuma relação com maturidade.&lt;/li&gt;
&lt;li&gt;Auto-organizacao é da natureza do ser humano. Todo mundo, de alguma forma, se auto-organiza em algum nível&lt;/li&gt;
&lt;li&gt;A auto-organizacao precisa de um esforço, ela só acontece quando tem um desassociais fatores: desejo ou necessidade &lt;/li&gt;
&lt;li&gt;O time tem o desejo de se auto-organizar?&lt;/li&gt;
&lt;li&gt;O time tem a necessidade se se auto-organizar?&lt;/li&gt;
&lt;li&gt;Quando o sucesso do projeto depende do resultado de todos os times, o time precisa se cobrar por auto-organizacao&lt;/li&gt;
&lt;li&gt;O scrum master precisa criar desejo é identificar a necessidade &lt;/li&gt;
&lt;li&gt;Mais metas compartilhadas e menos metas individuais ajuda a auto-organizacao&lt;/li&gt;
&lt;li&gt;é para criar desejo? Momentos de integração fora do trabalho, criar empatia entre os integrantes do time&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;fluxo&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Backlog é uma lista de pedaços do produto, em níveis de granuladidaxes diferentes em diferentes posições no Backlog, sem muitos detalhes&lt;/li&gt;
&lt;li&gt;O Backlog é priorizado, onde está mais pro topo, são as tarefas que entregam muito valor pro negocio / cliente&lt;/li&gt;
&lt;li&gt;De acordo com que você vai pegando itens do topo, as tarefas vão subindo e você precisa ir quebrando as histórias que estão mais pra baixo, dando mais detalhes sobre o objetivo da tarefa&lt;/li&gt;
&lt;li&gt;ele precisa estar em constante mudança, refletindo as mudanças das descobertas do time e do PO junto ao cliente&lt;/li&gt;
&lt;li&gt;O Backlog alimenta o Sprint, onde colocamos as tarefas para a linha de desenvolvimento&lt;/li&gt;
&lt;li&gt;Uma sprint é uma timebox, que tem uma estrutura pré-definida&lt;/li&gt;
&lt;li&gt;Toda sprint tem:

&lt;ul&gt;
&lt;li&gt;uma reunião de planejamento, sprint planning&lt;/li&gt;
&lt;li&gt;um período de desenvolvimento, pra desenvolver o incremento&lt;/li&gt;
&lt;li&gt;Sprint Daily&lt;/li&gt;
&lt;li&gt;Sprint review &lt;/li&gt;
&lt;li&gt;Sprint retrospective&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;O scrum propoe que o sprint seja de 1 a 4 semana. Não menores que uma semana nem maiores do que um mês.&lt;/li&gt;
&lt;li&gt;Em cada final da sprint, precisa haver o incremento, entregando valor para p usuário&lt;/li&gt;
&lt;li&gt;No Sprint Planning, decide-se as tarefas que vão para o sprint Backlog&lt;/li&gt;
&lt;li&gt;Retrospectiva fazemos a inspeção e a mudança no processo. &lt;/li&gt;
&lt;li&gt;O sprint é feito pra ter feedback rápido do cliente e PO&lt;/li&gt;
&lt;li&gt;Quando entregamos pedaços pequenos via sprints, conseguimos saber se o projeto está indo pra um caminho certo&lt;/li&gt;
&lt;li&gt;Não quer dizer que temos que entregar valor em produção pronto pra o cliente usar&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Product Backlog&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;a visão do produto, se materializa no Product Backlog&lt;/li&gt;
&lt;li&gt;A visão não faz parte do core do Scrum, por que você só tem uma visão de onde você quer chegar, isso quer dizer que há um final.&lt;/li&gt;
&lt;li&gt;Se você trabalha com produto, é necessário ter uma visão, pra sabermos onde estamos indo, mas podemos começar a fazer direto o Product Backlog sem depender de uma visão&lt;/li&gt;
&lt;li&gt;Você não fala de esforço, você fala de tamanho&lt;/li&gt;
&lt;li&gt;O Backlog é composto de itens. Para escolher os itens, você escolhe uma técnica pra escrever esses itens&lt;/li&gt;
&lt;li&gt;Quanto mais próximo do topo do Backlog estiver o item, mais clara e menor ele deve estar &lt;/li&gt;
&lt;li&gt;O nível de incerteza em volta dos itens que estão na parte de baixo do Backlog, é enorme&lt;/li&gt;
&lt;li&gt;Se o Card está lá Pra baixo, quer dizer que ele não está claro, não está detalhado, está nebuloso ainda&lt;/li&gt;
&lt;li&gt;Você sobe as tarefas conforme a tarefa vai ficando mais madura, com mais detalhes, com mais valor&lt;/li&gt;
&lt;li&gt;a maioria dos itens do Backlog, devem representar uma parte &lt;strong&gt;real&lt;/strong&gt; do produto. Isso se chama item de negócio. São itens funcionais, que vão entregar um comportamento novo no produto&lt;/li&gt;
&lt;li&gt;Nunca vai ter no Backlog algo como: criar tabela no banco de dados. Subir máquinas para produção&lt;/li&gt;
&lt;li&gt;Cada item tem que entregar algo material, real, palpável sobre o produto.&lt;/li&gt;
&lt;li&gt;Ou seja, ele não pode ser baseado em trabalho. &amp;ldquo;Eu como PO, preciso que os devs criem um banco de dados&amp;rdquo; é um péssimo item. &lt;/li&gt;
&lt;li&gt;no Backlog podem haver também bugs, que não entrega um comportamento novo, mas corrige algo que foi feito no passado&lt;/li&gt;
&lt;li&gt;é podem haver os itens técnicos, como POC, Spikes, Provas de Conceitos, que vão gerar uma entrega de decisão e não algo funcional.&lt;/li&gt;
&lt;li&gt;Nos itens técnicos, também podem ter dívidas técnicas.&lt;/li&gt;
&lt;li&gt;Um bug só é bug se a tarefa foi aceita e foi pra produção ou pra alguma área de teste e foi encontrado um problema&lt;/li&gt;
&lt;li&gt;retrospective e review, consomem 5% da sprint&lt;/li&gt;
&lt;li&gt;Planning meeting, também 5%&lt;/li&gt;
&lt;li&gt;Na Planning meeting:

&lt;ul&gt;
&lt;li&gt;Participa os três papéis, SM, PO e Dev Team&lt;/li&gt;
&lt;li&gt;dividido em duas partes: um planejamento mais estratégico: O Que. Outra parte mais mão na massa: Como&lt;/li&gt;
&lt;li&gt;parte 1: O Sprint precisa ter um Goal. Tem que ser uma meta de negócio. Tem que dar um benefício pra o usuário. O time precisa ver um propósito.&lt;/li&gt;
&lt;li&gt;A meta determina se o sprint foi bem sucedido ou não&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;me diga como você mede, que eu digo como entrego.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Uma sprint é bem sucedida ou não se ela entregou o esperado e não se ela entregou o estimado&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Na parte 2, o Dev Team deve identificar tecnicamente qual trabalho deve ser executado para ter aquela tarefa feita

&lt;ul&gt;
&lt;li&gt;é aqui que eles criam as famosas tasks, que são todos as tarefas técnicas para entregar as histórias da meta&lt;/li&gt;
&lt;li&gt;o que nós precisamos fazer para que essa tarefa esteja pronta no final da sprint?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PO tem que participar da segunda parte? Não, ele precisa estar acessível para o time nesse tempo!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;definition of done&lt;/strong&gt; é quando a tarefa está pronta pra ser entregue para o PO&lt;/li&gt;
&lt;li&gt;a Daily é uma reunião de Dev Team para Dev Team. 

&lt;ul&gt;
&lt;li&gt;O que fiz?&lt;/li&gt;
&lt;li&gt;O que farei&lt;/li&gt;
&lt;li&gt;Impedimento?&lt;/li&gt;
&lt;li&gt;Tanto o PO quanto o SM são opcionais na Daily, porque a discussão da Daily é para discutir coisas micro.&lt;/li&gt;
&lt;li&gt;So existem duas dailies, a que correta e a que o PO estava.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;review e retrospective são duas reunião com o mesmo propósito. A review foca no produto, retrospective foca no processo&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Dia 1 - CSM - ScrumAlliance - AdaptWorks</title>
    <link rel="alternate" href="http://diegoeis.com/dia-1-csm-scrumalliance-adaptworks.html"/>
    <id>http://diegoeis.com/dia-1-csm-scrumalliance-adaptworks.html</id>
    <published>2016-08-14T21:00:00-03:00</published>
    <updated>2016-08-16T21:52:42-03:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Anotações do curso de certificação de Scrum Master da Scrum Alliance, pela AdaptWorks, ministrado pelo &lt;a href="https://twitter.com/axmagno"&gt;Alexandre Magno&lt;/a&gt;. &lt;a href="/dia-2-csm-scrumalliance-adaptworks.html"&gt;Veja as anotações do segundo dia de curso&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Dia 1&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Todas as atitudes do Scrum Master são direcionadas com o jeito com que o time está trabalhando, e com o ambiente no qual estão fazendo isso&lt;/li&gt;
&lt;li&gt;Temos processos adequados para nossas pessoas tirarem o máximo de valor para clientes, stakeholders, etc?&lt;/li&gt;
&lt;li&gt;Foco em Processos e Pessoas.&lt;/li&gt;
&lt;li&gt;scrum master não tem como base se o produto é certo ou nao.&lt;/li&gt;
&lt;li&gt;Ele também não está cobrindo a área tecnológica &lt;/li&gt;
&lt;li&gt;projetos ágeis são projetos com tempo fixo&lt;/li&gt;
&lt;li&gt;como SM você precisa confiar na sua equipe para que eles produzam melhor, seguindo seu próprio estilo, sem um modelo imposto, respeitando a complexidade do projeto e suas restrições&lt;/li&gt;
&lt;li&gt;os desenvolvedores precisam ter uma visão clara do objetivo, e o escopo depende de objetivo pra objetivo&lt;/li&gt;
&lt;li&gt;em um projeto normal existe escopo, prazo e custo&lt;/li&gt;
&lt;li&gt;Na forma tradicional, fixamos os três pontos. Mas no Scrum nós trabalhamos com prazo fixo, custo fixo e &lt;strong&gt;escopo flexível, aberto e incremental&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;O escopo precisa ter uma visão ligada a ele. Uma visão macro, um objetivo. O que o cliente vai ganhar no final? Qual a estrutura de visão do produto? São definições macro do produto, que deverão ficar fechados. &lt;/li&gt;
&lt;li&gt;O escopo é flexível, mas você não pode mudar no meio do caminho o objetivo macro do projeto/história&lt;/li&gt;
&lt;li&gt;o fato do time não saber o que vai fazer e como fazer nos próximos dias, não quer dizer que o escopo vai ser modificado ou o projeto vai atrasar.&lt;/li&gt;
&lt;li&gt;Mas como garantimos isso? Por que esse processo é o plano vai se adaptar de acordo com a variação do projeto&lt;/li&gt;
&lt;li&gt;FDD - Feature Driven Development &lt;/li&gt;
&lt;li&gt;métodos ágeis não são o fim, empresas que não admitem seus próprios problemas em processos, pessoas e clientes, falharão usando Agile&lt;/li&gt;
&lt;li&gt;Muitas empresas praticam um Agile fake, com grandes falhas&lt;/li&gt;
&lt;li&gt;Identifique quais os problemas que você tem no seu projeto&lt;/li&gt;
&lt;li&gt;se há muita incerteza nas definições, manter escopo de funcionalidades flexível maximiza a geração de valor para o negocio&lt;/li&gt;
&lt;li&gt;Ter requisitos estáveis significa que eles continuarão imutáveis por bastante tempo, dessa forma Você consegue medir a complexidade do ambiente&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Origem do Scrum&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;1994: nascimento do Scrum&lt;/li&gt;
&lt;li&gt;começou a ficar mais popular só lá na frente, nos anos 2001, 2002, 2003, mas estourou mesmo em 2009 por que em 2008 teve uma crise econômica imobiliária&lt;/li&gt;
&lt;li&gt;Onde aprendemos sobre incertezas e planejamentos a longo prazo&lt;/li&gt;
&lt;li&gt;scrum fala que no máximo em 1 mês você precisa entregar incrementos do projeto&lt;/li&gt;
&lt;li&gt;Isso na década de 90 era um horror por causa das tecnologias existentes&lt;/li&gt;
&lt;li&gt;Hoje, com a tecnologia avançada, conseguimos criar produtos mais modulares, o que facilitou a vida de quem usa scrum&lt;/li&gt;
&lt;li&gt;outro ponto era que o mercado não achava que o problema da não entrega do software, era do método, mas das pessoas &lt;/li&gt;
&lt;li&gt;scrum é só para desenvolvimento de software? Não, hoje em dia há empresas relacionadas a manufatura e negócios que usam o scrum&lt;/li&gt;
&lt;li&gt;Mas o scrum nasceu no desenvolvimento de software, ele nasceu &lt;strong&gt;para&lt;/strong&gt; software&lt;/li&gt;
&lt;li&gt;Os criadores de chamam &lt;strong&gt;Ken Schwaber&lt;/strong&gt; e &lt;strong&gt;Jeff Sutherland&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scrum é uma jogada do Rugby para retomar a posse de bola, isso é uma jogada que depende muito da auto-organização da equipe&lt;/li&gt;
&lt;li&gt;Conceito de auto-organização&lt;/li&gt;
&lt;li&gt;naquele tempo, todos os métodos para desenvolvimento de software, eram baseados no método waterfall, que vem do modelo industrial, linha de produção, onde se pega todo o trabalho que existe, divide em especialização e divide em fases&lt;/li&gt;
&lt;li&gt;O Scrum se baseia num processo interativo e incremental, onde em cada interação, temos certeza de que temos todas as especialidades para entregar um incremento funcional. &lt;/li&gt;
&lt;li&gt;Como cada interação tem todas as especialidades para criar um pedaço do projeto por inteiro, é possível entregar pedaços funcionais do projeto, em um escopo flexível, mas com tempo de entrega definido &lt;/li&gt;
&lt;li&gt;Antigamente os métodos eram baseados em uma gestão centralizada. Quem faz gestão não executa e quem executa não faz gestão, vem do modelo de Taylor, onde o que você tinha na execução aquela pessoa que dava a “mão de obra”&lt;/li&gt;
&lt;li&gt;Gestão e execução são situacionais. Há um tempo no projeto que você precisa fazer mais ou menos gestão do projeto e outras que precisa se concentrar na execução&lt;/li&gt;
&lt;li&gt;O scrum tenta misturar os dois, em cada um dos ciclos de desenvolvimento&lt;/li&gt;
&lt;li&gt;não adianta ter equipes multidisciplinares se você não compartilha a gestão. &lt;/li&gt;
&lt;li&gt;Não adianta utilizar scrum se seu fluxo ainda é waterfall&lt;/li&gt;
&lt;li&gt;Não adianta usar scrum se você tem um gerente cobrando entregas e produtividade em cima do time de desenvolvimento&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Complexidade&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tamanho não é a medição mais adequada para se decidir se vai ou não vai usar Scrum.&lt;/li&gt;
&lt;li&gt;A forma mais adequada é o nível de complexidade do seu projeto. Eles se basearam na Teoria da Complexidade&lt;/li&gt;
&lt;li&gt;O que significa Complexidade? Complexidade não quer dizer difícil. Complexidade tem a ver com incerteza, com instabilidade. Algo é mais simples, quando é certo ou estável.&lt;/li&gt;
&lt;li&gt;Existem vários frameworks no campo científico qua ajudam a discutir esse assunto. Um deles é o Stacey Diagram.&lt;/li&gt;
&lt;li&gt;Quanto mais difícil a gestão por causa da instabilidade e incerteza do projeto, mais você pode descentralizar a gestão&lt;/li&gt;
&lt;li&gt;Scrum foi criado para contemplar projetos fortemente complexos, mas que não chega a ser caótico&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Normalmente confundimos caos com desordem. Caos quer dizer que temos um ambiente imprevisível, mas não desorganizado. Um pronto socorro é um ambiente caótico, mas imprevisível.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Cynefin Framework. Divide o ambiente em complexo, complicado, caótico e simples. No meio fica a desordem.&lt;/li&gt;
&lt;li&gt;Na Sprint você tem mais estabilidade e conhecimento do que você tem no seu projeto. Isso é normal. &lt;/li&gt;
&lt;li&gt;Não faz sentido usar scrum para Projetos com escopo fechado, arquitetura já definida. Se você já tem um escopo definido e uma arquitetura conhecida, você tem um projeto simples, talvez um pouco complicado.&lt;/li&gt;
&lt;li&gt;Em projetos com uma stack e um escopo bem conhecido e definido, talvez os modelos de Waterfall seja o modelo mais acertado para esses projetos.&lt;/li&gt;
&lt;li&gt;Entregar valor rápido para o cliente, é um efeito colateral e não um objetivo. Você não usa Scrum para entregar mais rápido.&lt;/li&gt;
&lt;li&gt;Mas quanto mais rápido você entrega valor para o cliente, você está sujeito a mais mudanças, porque o cliente reage, o PO reage, o UX reage a estas entregas.&lt;/li&gt;
&lt;li&gt;Somos ágeis para responder a mudanças de um ambiente de incertezas&lt;/li&gt;
&lt;li&gt;Uma empresa de Games não podem entregar para o cliente metade de um jogo. Eles podem trabalhar com scrum e entregas incrementais, mas só vai entregar para o cliente quando o game estiver totalmente completo.&lt;/li&gt;
&lt;li&gt;O topo do backlog do produto precisa ser as histórias estáveis, conhecidas, para que possamos diminuir o nível de incertezas e instabilidades do projeto. &lt;/li&gt;
&lt;li&gt;Você decide se vai ou não usar scrum de acordo com o nível de incerteza do seu projeto&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Agile&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile não é uma metodologia ou ferramenta. Agile é um mindset. Está mais relacionado a comportamento do que método.&lt;/li&gt;
&lt;li&gt;Valores Agile

&lt;ol&gt;
&lt;li&gt;Pessoas e interações entre elas. Você precisa ter um ambiente que valorize as pessoas, por que são as pessoas que serão determinantes no sucesso do projeto. Facilite a comunicação entre as pessoas.&lt;/li&gt;
&lt;li&gt;Entregar software funcionando. É isso que gera valor. Não se dê o luxo de ficar 3 meses escrevendo documentação. O mindset ágil diz que a entrega de valor é entrega software funcionando o quanto antes.&lt;/li&gt;
&lt;li&gt;Colaboração com o cliente. Colaborar não é ser bonzinho. Colaborar é no sentido de trabalhar junto com o cliente. Não dá para dizer que você é ágil se o seu padrão de trabalho é separar o cliente durante o desenvolvimento do projeto.&lt;/li&gt;
&lt;li&gt;Responda à mudanças. Quem tem mindset ágil sabe que mudanças vão acontecer durante todo o projeto. Precisamos estar preparados para responder à mudanças de forma rápida.&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;Métodos ágeis são os princípios do mindset agile que materializam os valores Agile, fazendo com que esses valores não sejam mais um mantra, mas virem prática&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;O que é Scrum?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scrum é um framework de processos emergentes em contextos predominantemente complexos.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scrum é um framework. Scrum não é uma metodologia.&lt;/li&gt;
&lt;li&gt;Scrum é baseado em Fluxo, Papéis, Artefatos, Cerimônias.&lt;/li&gt;
&lt;li&gt;Metodologias são prescritas, ou seja, ela diz exatamente como você precisa seguir. Um framework também não é tão fácil de se alterar, mas você pode montar coisas em cima.&lt;/li&gt;
&lt;li&gt;Metodologia está completa. Ela se vende como algo que está completo. É só implantar e usar. Um Framework se vende como incompleto, você vai precisar completá-lo, ele não acreditar ter o suficiente para o que você precisa.&lt;/li&gt;
&lt;li&gt;Framework não é Ready to use. Por definição Scrum é incompleto, não por falha ou erro, mas por conceito.&lt;/li&gt;
&lt;li&gt;Ele não define l que você precisa fazer (planejamento, documentação etc), por que ele não sabe o que será bom pra você. Ele deixa que essas decisões fiquem na sua mão, adequando de acordo com a sua necessidade.&lt;/li&gt;
&lt;li&gt;Por exemplo: scrum não te fala como se estima projeto. O cara que entendeu o scrum como framework, entende que para estimar um projeto, depende do contexto e ele vai escolher qual a melhor solução/técnica para estimar projetos.&lt;/li&gt;
&lt;li&gt;O Scrum também não diz como escrever requisitos, histórias etc. Para quem não conhece framework, diz que Scrum não escreve requisitos, o negócio é falar mesmo. Mas o que já conhece o conceito, decide que é melhor, para aquele projeto, usar User Case. Ou User Story em outro cenário.&lt;/li&gt;
&lt;li&gt;O pior Scrum Master do mundo é aquele que só conhece Scrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;bases do processo Scrum&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;fluxo: O scrum se baseia no conceito de Sprint&lt;/li&gt;
&lt;li&gt;O sprint é a forma com que o scrum expressa o ciclo incremental de trabalho&lt;/li&gt;
&lt;li&gt;em papéis, temos 3: dev Team, Product Owner e Scrum Master&lt;/li&gt;
&lt;li&gt;Artefatos: sprint Backlog, Product increment e Product Backlog&lt;/li&gt;
&lt;li&gt;Eventos: sprint planning, Daily meeting, sprint review, sprint retrospective&lt;/li&gt;
&lt;li&gt;E em seus valores temos os valores do manifesto ágil.&lt;/li&gt;
&lt;li&gt;Essa é estrutura pra se desenvolver o mindset Agile&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Papéis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A gestão de um projeto scrum é feita por três personagens: Product Owner, Scrum Master e Dev Team.&lt;/li&gt;
&lt;li&gt;o Product Owner não se preocupa ou não em fazer gestão se preocupando se o objetivo da sprint vai ser alcançado, se as tarefas estão no prazo, quais os riscos da sprint. Ele vê o macro, vê o projeto, risco do produto.&lt;/li&gt;
&lt;li&gt;O que for micro gestão, fica com o Development Team. Quem tem que estar preocupado com os riscos da sprint é o dev Team, o prazo, entregas e etc.&lt;/li&gt;
&lt;li&gt;PO é macro gestão, Development Team é Micro Gestão. &lt;/li&gt;
&lt;li&gt;Processos e Pessoas fica com o Scrum Master. Ele está preocupado todas as peculiaridades do time e do projeto, e propõem soluções para melhorar a produtividade do time&lt;/li&gt;
&lt;li&gt;Scrum Master precisa ter pensamento de processo. Se está errado, é por que o processo está errado e não por que o time é ruim&lt;/li&gt;
&lt;li&gt;Não é o time que é acomodado, é o processo que está falhando em aumentar o senso de urgência.&lt;/li&gt;
&lt;li&gt;Processos são feitos para as pessoas entregarem melhor, se comunicarem melhor, trabalharem melhor.&lt;/li&gt;
&lt;li&gt;o super poder do Scrum Master é se colocar no outro, ele precisa gostar de gente.&lt;/li&gt;
&lt;li&gt;Quem vai levar porrada do PO se o sprint não for finalizado, é o Development Team.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fazer a coisa certa, do jeito certo, em um ambiente sustentável.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;PO garante que está fazendo a coisa certa&lt;/li&gt;
&lt;li&gt;Dev Team garante o jeito certo&lt;/li&gt;
&lt;li&gt;Scrum Master garante o ambiente sustentável&lt;/li&gt;
&lt;li&gt;Alma do Scrum são os valores&lt;/li&gt;
&lt;li&gt;Corpo são os fluxos, eventos, papéis e artefatos&lt;/li&gt;
&lt;li&gt;Não dá pra ter só corpo ou só alma, precisa ter os dois juntos. &lt;/li&gt;
&lt;li&gt;Ter os papéis do Scrum são a coisa mais importante pra ter uma transição pro Agile&lt;/li&gt;
&lt;li&gt;Corpo sem alma é zumbi, alma sem corpo é fantasma.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Product Owner&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;PO gerencia as entregas, por que foi ele que acertou a entrega com o time&lt;/li&gt;
&lt;li&gt;ele que combina o que vai e o que não vai entrar no sprint&lt;/li&gt;
&lt;li&gt;satisfação do cliente é uma responsabilidade do PO. Por que é o cara que prioriza o que vai ou não ser feito é que detém a tomada de decisão&lt;/li&gt;
&lt;li&gt;gestão dos stakeholders&lt;/li&gt;
&lt;li&gt;Cronograma do projeto PO&lt;/li&gt;
&lt;li&gt;Custo&lt;/li&gt;
&lt;li&gt;Comunicar prazos do projeto&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Scrum Master&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Desenvolvimento de competências. Se o time não está maduro para o processo, é dever do SM desenvolver essa competência no time&lt;/li&gt;
&lt;li&gt;retira impedimentos do processo. &lt;/li&gt;
&lt;li&gt;Facilitador&lt;/li&gt;
&lt;li&gt;Retirar impedimentos&lt;/li&gt;
&lt;li&gt;Dar ao Product Owner processos que o ajudem a dar mais visibilidade do projeto&lt;/li&gt;
&lt;li&gt;qualquer coisa relacionada aos processos, scrum e Agile, é o Scrum Master que precisa ensinar para os pares&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Dev Team&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;gerencia tarefas. Isso significa que nas sprints é dia a dia, eles discute entre eles quem tem mais habilidade pra fazer cada tarefa&lt;/li&gt;
&lt;li&gt;são responsáveis se as tarefas vão ser entregues no dia, atrasos e etc&lt;/li&gt;
&lt;li&gt;Resolução de conflitos entre pessoas do time. Qualquer resolução deveria surgir do próprio time&lt;/li&gt;
&lt;li&gt;o time decide o que é impedimento ou não&lt;/li&gt;
&lt;li&gt;cronograma da sprint&lt;/li&gt;
&lt;li&gt;qualidade de entrega das tarefas&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Hierarquia&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Hierarquia no scrum é situacional, ela não é definitiva &lt;/li&gt;
&lt;li&gt;PO precisa bater no Dev Team, questionando sobre as entregas e problemas nas tarefas do produto&lt;/li&gt;
&lt;li&gt;Se o assunto for tecnologia/micro gestão, Dev Team é que decide e manda&lt;/li&gt;
&lt;li&gt;Se for processos e pessoas, é o scrum master que comanda &lt;/li&gt;
&lt;li&gt;Scrum é contra a liderança fixa, por que uma pessoa que não é boa em todos os assuntos deverá tomar decisões sobre tudo&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Imagens de apoio&lt;/h3&gt;

&lt;p&gt;&lt;img src="assets/images/post-csm-dia-1/2016-08-16-13.21.23.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-16-13.21.33.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-16-13.21.39.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-16-13.21.43.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-16-13.21.50.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-16-17.43.04.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-15-17.50.52.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-15-17.50.58.jpg" /&gt;
&lt;img src="assets/images/post-csm-dia-1/2016-08-15-17.51.38.jpg" /&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
