<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>diegoeis.com</title>
  <subtitle>Blog do Diego Eis</subtitle>
  <id>http://diegoeis.com/</id>
  <link href="http://diegoeis.com/"/>
  <link href="http://diegoeis.com/feed.xml" rel="self"/>
  <updated>2016-12-31T06:00:00-02:00</updated>
  <author>
    <name>Diego Eis</name>
  </author>
  <entry>
    <title>Um pequeno estudo sobre a Microsoft</title>
    <link rel="alternate" href="http://diegoeis.com/um-pequeno-estudo-sobre-a-microsoft.html"/>
    <id>http://diegoeis.com/um-pequeno-estudo-sobre-a-microsoft.html</id>
    <published>2016-12-31T06:00:00-02:00</published>
    <updated>2017-01-05T21:44:48-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Uma das fases de uma entrevista de emprego que participei ano passado, envolveu fazer um exercício. A tarefa era a seguinte: eu deveria escolher uma das 10 empresas de tecnologia mais valiosas do mundo e imaginar que eu acabei de ser contratado pra liderar todo o desenvolvimento de um dos produtos dessa empresa. Eu deveria fazer uma apresentação mostrando uma análise estratégica do produto e principais entregas recentes, além de uma definição estratégica de médio prazo, com um roadmap de entregas. Como você já deve saber pelo título desse artigo, eu acabei escolhendo a Microsoft.&lt;/p&gt;

&lt;p&gt;A Microsoft mudou muito nos últimos anos, principalmente depois que o Satya Nadella começou a comandá-la. Depois da saída do Steve Ballmer, a M$ se transformou da água pro vinho. O que era uma empresa solitária, toda poderosa e auto suficiente se transformou numa empresa colaborativa, com uma visão realmente clara de futuro e principalmente antenada com os movimentos e as tendências tecnológicas do mercado. &lt;/p&gt;

&lt;p&gt;A primeira ideia que tive para a apresentação foi de transformar o Edge em um browser multiplataforma. O Edge é um browser sensacional e um dos mais modernos, por isso, seria interessante ter uma versão para Mac e Linux. Isso iria de encontro ao plano da Microsoft de expandir seus domínios em plataformas diferentes do Windows. Mas acabei tendo outra ideia, que pra mim seria muito mais ousada: transformar o Xbox em um app de jogos multiplataforma por meio de streaming de games, o famoso GaaS. Escolhi o Xbox para tentar sair da minha zona de conforto e falar sobre um produto que não fosse naturalmente um produto web. &lt;/p&gt;

&lt;h2&gt;A visão atual e futura da Microsoft&lt;/h2&gt;

&lt;p&gt;Com o comando do Steve Ballmer, a Microsoft tinha uma visão resumida em duas palavras: Devices + Services. A ideia era ter hardware e software para consumidores e empresas. Era muito comum ouvir o Ballmer falar sobre &amp;ldquo;família de dispositivos&amp;rdquo; da Microsoft. &lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/post-microsoft/visao-atual.png" /&gt;&lt;/p&gt;

&lt;p&gt;O Surface é um ótimo aparelho, mas ainda está longe de ter as vendas de um iPad, quem dirá chegar perto das vendas de tablets com Android. O Windows Phone não decolou nem com a compra da Nokia. O Xbox dá dinheiro, mas nos últimos quarters de 2016 ele estava dando prejuízo de uns 5% pra empresa (este número está nos reports). O Windows está dando prejuízo, embora tenha se recuperado com o Windows 10 (o Windows 8 foi embaraçoso pra MS), mesmo com a Microsoft liberando o upgrade gratuito para quem tinha Windows 8.&lt;/p&gt;

&lt;p&gt;O mantra do Satya Nadella é um pouco diferente: Mobile + Cloud.
A palavra &lt;strong&gt;Mobile&lt;/strong&gt; não quer se referir apenas aos Smartphones, mas também Tablets, PCs, Notebooks, Consoles e qualquer outro dispositivo (sendo ou não da Microsoft) que o usuário utilize diferente do Desktop. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nadella knows millions of iOS, OS X, Chrome, and Android users will likely never come back to Windows but still need Microsoft software. The cross-platform opportunity is too big to ignore, even if it strengthens Windows competitors. — &lt;a href="http://www.informationweek.com/software/enterprise-applications/microsofts-mobile-first-cloud-first-strategy-explained/d/d-id/1234865"&gt;Michael Endler&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ele se refere ao &lt;strong&gt;Cloud&lt;/strong&gt; sendo um ambiente escalável para manter dispositivos e serviços sincronizados e conectados. Sem uma arquitetura de cloud bem definida, a Microsoft não conseguiria tornar real seu plano de Cloud First + Mobile First. A M$ precisa jogar suas coisas no Cloud para tornar possível a exploração de novas fronteiras, isso é: serviços e apps fora dos seus dispositivos e sistemas.&lt;/p&gt;

&lt;p&gt;Na realidade Mobile e Cloud precisam se interagir como se fossem um só. Não existe potencial em serviços baseados em Cloud, mas que não estão conectados a nenhum dispositivo&amp;hellip; Como o Cloud conseguiria interagir com o mundo real? É pelo cloud que chegamos aos dispositivos. E quando falamos de dispositivos, isso quer dizer que o dispositivo pode ser um sensor, um dispositivo móvel, um tablet, uma tela gigante na sala de casa ou na sala de reunião em uma empresa. Da mesma forma que um dispositivo que não está conectado no cloud, não pode completar esse cenário. Entendeu a sinergia que a Microsoft está buscando?&lt;/p&gt;

&lt;p&gt;A visão de futuro da Microsoft é muito, mas muito legal.
Ela quer focar em conversações. &lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/post-microsoft/visao-futuro.png" /&gt;&lt;/p&gt;

&lt;p&gt;O mantra é: &lt;strong&gt;Conversations as a Platform&lt;/strong&gt;. Isso tem bastante a ver com o que temos visto com a era dos assistentes pessoais como a Cortana, Siri etc. Além dos Chatbots, que estão dominando vários mercados. Veja esse vídeo da apresentação que eles fizeram em Março do ano passado.&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/zqMYBWwW16M" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Além disso, ela tem focado bastante em aparelhos como o HoloLens. Mesmo que somente para empresas nesse primeiro momento, é impossível não pensar na integração HoloLens + Xbox.&lt;/p&gt;

&lt;p&gt;Além disso, a Microsoft está indo pra um caminho onde licença do Windows se torna grátis. A saúde do ecossistema é mais importante que as políticas de licença.&lt;/p&gt;

&lt;h3&gt;Personas&lt;/h3&gt;

&lt;p&gt;Pra tudo isso funcionar, ela definiu três personas diferentes: Consumidores, Desenvolvedores e Profissionais de TI. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Consumidores: Ela quer ajudar os Consumidores (usuários comuns e profissionais) a fazerem mais em qualquer dispositivo.&lt;/li&gt;
&lt;li&gt;Desenvolvedores: Ela quer ajudar os desenvolvedores a criarem serviços inovadores provendo dispositivos e softwares.&lt;/li&gt;
&lt;li&gt;Profissionais de TI: Ajudar na gestão e na proteção dos assets da empresa, de forma a evitar problemas com limitações de segurança, implantações, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Eu confesso que fiquei bem confuso quando vi que a Microsoft faz questão de focar em profissionais de TI. Manja aquele cara que você não dá nada por que ele fica montando e desmontando computador dos funcionários, configura Outlook, arruma e formata o Windows etc, pois é&amp;hellip; A Microsoft acha esse cara muito importante, já que é ele que controla a instalação de software da empresa, muitas vezes é ele que decide quando atualizar o Windows e qualquer outro software etc etc etc.&lt;/p&gt;

&lt;p&gt;Outra coisa é que não importa que qual o sistema usado pelos profissionais de TI, ele poderá usar as ferramentas da Microsoft para gerenciar, autenticar e cuidar da segurança dos dispositivos da empresa. &lt;/p&gt;

&lt;p&gt;Além disso, na estratégia de cloud, a Microsoft quer facilitar ambientes  do Azure para Linux. Azure suporta agora CentOS, CoreOS, Debian, openSUSE, Oracle Linux, Red Hat Enterprise Linux (RHEL), SUSE Linux Enterprise Server (SLES) e Ubuntu.&lt;/p&gt;

&lt;h2&gt;Os concorrentes&lt;/h2&gt;

&lt;p&gt;Eu não listei todos os concorrentes do mundo, mas selecionei dois que eu julguei os principais: Steam e Playstation. &lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/post-microsoft/concorrentes.png" /&gt;&lt;/p&gt;

&lt;p&gt;Levantei os números de cada um, além dos números do Xbox. Aqui eu já enfrentei um problema: o que é um &lt;strong&gt;Usuário Ativo&lt;/strong&gt; para esses caras? Os três tratam usuários ativos de forma diferente: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a Microsoft não abre quantos usuários pagantes existem no Xbox Live, mas a Live tem mais de 42 Milhões de usuários, que podem ou não gerar alguma compra/renda.&lt;/li&gt;
&lt;li&gt;o Steam trata usuários ativos como usuários que jogam. Logo, o número é bem maior, algo em torno de 198 milhões de jogadores, que podem ou não gerar alguma compra/renda.&lt;/li&gt;
&lt;li&gt;a Sony é um pouco mais transparente: eles tem 65 Milhões de usuários na PSN, mas só 20.8 Milhões são pagantes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A receita de cada que é estrondosa. Veja que o Xbox e o Playstation ficam na casa dos Bilhões. Sendo que o Playstation ganha quase que o dobro da Microsoft. E esse número da Microsoft também não reflete o valor real, já que eles colocam ali o valor gastos com a compra de jogos também, não apenas com a Live. Perceba que a Steam fica na lanterna. Pelo que eu pesquisei, ela fica lá em último lugar por causa das promoções, bundles e etc. &lt;/p&gt;

&lt;h2&gt;O mercado de jogos&lt;/h2&gt;

&lt;p&gt;Eu gosto de jogar video game, mas não jogo desde que meu Xbox quebrou e eu decidi tentar usar esse tempo com coisas mais úteis. Mas mesmo eu gostando bastante de jogar, eu não tinha ideia do tamanho do mercado de jogos. Eu sei que eles faturam milhões. Mas qual o cenário global dos jogos? Quais os mercados que o Xbox atua?&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/post-microsoft/mercado1.png" /&gt;&lt;/p&gt;

&lt;p&gt;Em 5 anos o mercado de jogos cresceu algo em torno de 6.6%. Perceba o aumento do mercado de jogos para smartphone e mobile, comendo quase 46% de todo o valor, faturando algo em torno de USD$52.5 Bilhões.&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/post-microsoft/mercado2.png" /&gt;&lt;/p&gt;

&lt;p&gt;Depois que eu parei de jogar em consoles frequentemente, eu me entreguei a jogos casuais como Clash of Clans, HearthStone, Mario Run etc. Esses jogos pegam exatamente um público como eu, que quer continuar jogando, mas não tem uma, duas ou três horas disponíveis para sentar na frente de uma televisão com calma.&lt;/p&gt;

&lt;p&gt;Outra coisa que dá pra perceber, é que o mercado que o Xbox atual é responsável por apenas 29% da fatia total, que corresponde a 29 Bilhões. Ela cresce algo em torno de 4.4% ao ano.&lt;/p&gt;

&lt;p&gt;Se levarmos em consideração, a Microsoft está presente em dois setores: Entertainment Screens com o Xbox e Computer Screens com a venda de jogos de PC. Só falta ela ser inserida nos mobiles, o que não é muito fácil, já que o Windows Phone foi um fiasco.&lt;/p&gt;

&lt;h2&gt;O Roadmap&lt;/h2&gt;

&lt;p&gt;Como eu não precisava dar datas exatas, mesmo por que eu não tenho ideia de quanto tempo levaria cada fase, além disso, eu gosto de metodologias ágeis, logo, se fosse na vida real, eu não tenho um roadmap adiantado em anos. Os principais pontos do plano seriam:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Aplicativo SmartGlass se transforma em segunda tela para console Xbox, tanto pra jogos quanto pra outras medias&lt;/li&gt;
&lt;li&gt;Lançamento Aplicativo do Xbox para Plataforma Windows. Console e App Windows tem a mesma interface com funcionalidades parecidas. Contudo, usuários ainda fazem downloads dos jogos (como no Steam)&lt;/li&gt;
&lt;li&gt;Jogadores do Console podem jogar online sem distinção com jogadores do Windows&lt;/li&gt;
&lt;li&gt;Windows e o Console fazem Stream dos jogos. Jogadores ainda tem opção de download por conta da velocidade de conexão.&lt;/li&gt;
&lt;li&gt;Futuro:

&lt;ul&gt;
&lt;li&gt;Stream dos jogos para Mac / Linux? &lt;/li&gt;
&lt;li&gt;Stream de Jogos  nos Tablets e Smartphones?&lt;/li&gt;
&lt;li&gt;HoloLens funcionando em tudo isso?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No final do plano, o Xbox já estaria no setor de Game as a Service (GaaS), virando uma espécie aplicativo multiplataforma, que possibilita jogar seus jogos via Cloud ou baixando os jogos, como o Steam.&lt;/p&gt;

&lt;p&gt;Isso abriria outra oportunidade para Microsoft (que era uma das minhas listadas na apresentação) que é de transformar o Xbox em um centro multimedia de verdade, competindo com o AppleTV diretamente. Ele deixaria de ser um aparelho cuja função principal seria jogar e passaria a ser um aparelho que controla as atividades digitais da casa.&lt;/p&gt;

&lt;h2&gt;Oportunidades e riscos&lt;/h2&gt;

&lt;p&gt;Mapeando de forma bem macro as oportunidades seriam:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fortalecimento do ecosistema entre Xbox + Windows 10;&lt;/li&gt;
&lt;li&gt;Xbox entra na concorrência com Steam (principalmente), EA Origin e Sony’s Remote Play;&lt;/li&gt;
&lt;li&gt;Xbox Live vira multiplataforma, abrindo possibilidades de conversão de usuários de PC’s e possivelmente Smartphones.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nesse processo, eu li vários relatórios financeiros da Microsoft. Ela disse em cada um deles que a ideia é fortalecer o ecossistema da empresa, colocando o Windows 10 como o centro da coisa toda&amp;hellip; Exatamente por isso que eles trocaram o sistema dos seus aparelhos para Windows 10, diminuindo o problema de compatibilidade entre as plataformas.&lt;/p&gt;

&lt;p&gt;Os riscos e dúvidas seriam:
- Provavelmente usuários deixam de comprar o console; Xbox teve uma queda de 5% na receita no último quarter de 2016.
- Jogadores não poderão fazer stream de jogos que foram comprados para PC “fora” da Live; Ou seja, só jogos comprados da Live seriam &amp;ldquo;streamados&amp;rdquo;.
- Fabricantes de Jogos poderão continuar vendendo seus jogos para PC fora da Xbox Live?
- O aplicativo de jogos multiplaforma que eu estou sugerindo ainda teria Xbox no nome ou poderia passar a se chamar apenas Microsoft Live?&lt;/p&gt;

&lt;p&gt;Uma pergunta que surgiu na entrevista foi: &lt;strong&gt;Quais os riscos para o usuário?&lt;/strong&gt;
Eu respondi que o risco para o usuário seria não ter esse ecossistema funcionando adequadamente. Querendo ou não, a Microsoft ainda está montando seu ecossistema. Ela ainda não é como o Google ou a Apple que tem seus jardins dourados funcionando muito bem. Ela começou agora sair da caixa e a colocar seus apps em lugares que ela não é dona, como é o caso do pacote Office rodando perfeitamente e de graça no iOS.&lt;/p&gt;

&lt;h2&gt;Para ler mais&lt;/h2&gt;

&lt;p&gt;Foi um exercício bem legal. Tive que fazer em uns 4 dias. Achei que a apresentação ficou muito simples. Mesmo assim eles gostaram bastante. Mas como disse lá em cima, o que eu mais gostei foi de buscar informações sobre uma única empresa e se aprofundar na sua cultura, visão de futuro etc. E você, o que achou?&lt;/p&gt;

&lt;h4&gt;Dados Faturamento Raking:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fortune.com/2016/02/04/most-valuable-companies-fortune-500-apple/"&gt;http://fortune.com/2016/02/04/most-valuable-companies-fortune-500-apple/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/4-most-valuable-public-companies-all-tech-companies-2016-8"&gt;http://www.businessinsider.com/4-most-valuable-public-companies-all-tech-companies-2016-8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.nasdaq.com/screening/companies-by-industry.aspx?industry=Technology&amp;amp;sortname=marketcap&amp;amp;sorttype=1"&gt;http://www.nasdaq.com/screening/companies-by-industry.aspx?industry=Technology&amp;amp;sortname=marketcap&amp;amp;sorttype=1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Visão estratégica Microsoft&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://news.microsoft.com/2014/03/27/satya-nadella-mobile-first-cloud-first-press-briefing/#sm.0000114k83ys2vezgvftkl04uyjvq"&gt;https://news.microsoft.com/2014/03/27/satya-nadella-mobile-first-cloud-first-press-briefing/#sm.0000114k83ys2vezgvftkl04uyjvq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.informationweek.com/software/enterprise-applications/microsofts-mobile-first-cloud-first-strategy-explained/d/d-id/1234865"&gt;http://www.informationweek.com/software/enterprise-applications/microsofts-mobile-first-cloud-first-strategy-explained/d/d-id/1234865&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.theverge.com/2013/9/20/4749574/microsoft-business-model-mix-of-google-and-apple"&gt;http://www.theverge.com/2013/9/20/4749574/microsoft-business-model-mix-of-google-and-apple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bloomberg.com/gadfly/articles/2016-07-19/microsoft-turns-bing-from-a-joke-into-an-ad-business"&gt;https://www.bloomberg.com/gadfly/articles/2016-07-19/microsoft-turns-bing-from-a-joke-into-an-ad-business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.com/microsofts-bing-ad-revenue-growth-2016-7"&gt;http://www.businessinsider.com/microsofts-bing-ad-revenue-growth-2016-7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/microsoft-surface-hub/en-us"&gt;https://www.microsoft.com/microsoft-surface-hub/en-us&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Meu ano em livros - 2016</title>
    <link rel="alternate" href="http://diegoeis.com/meu-ano-em-livros-2016.html"/>
    <id>http://diegoeis.com/meu-ano-em-livros-2016.html</id>
    <published>2016-12-28T22:00:00-02:00</published>
    <updated>2017-01-03T13:37:49-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Eu nunca li tanto quanto esse último ano de 2016. Eu sempre li muito, mas nada tão sistemático… sempre muito casual e se resumia a livros técnicos ou livros sobre religião. &lt;a href="https://diegoeis.com/um-pouco-sobre-a-experiencia-de-ir-trabalhar-sem-carro.html"&gt;Esse ano eu decidi andar menos de carro e usar mais o transporte público para ir ao trabalho&lt;/a&gt;. Essa atitude me fez ganhar duas horas por dia e claro, preenchi com livros.&lt;/p&gt;

&lt;p&gt;Pensei em ler 12 livros. Logo, calculei minha preguiça, mais problemas e imprevistos… esse número diminuiu pra 9. Uma meta ultra conservadora.&lt;/p&gt;

&lt;p&gt;Resultado final: &lt;a href="https://www.goodreads.com/user/year_in_books/2016/50891723"&gt;35 livros lidos&lt;/a&gt;. Foram 8339 páginas lidas. A grande maioria dos livros foram de Ficção Científica. Não costumo ler muita coisa técnica por que gosto de consumir esse tipo de conteúdo na internet.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*cvChRo5_QlkmCEdQ8uxJyA" /&gt;&lt;/p&gt;

&lt;p&gt;Descobri que &lt;strong&gt;Isaac Asimov&lt;/strong&gt; é o meu autor predileto em &lt;strong&gt;Ficção Científica&lt;/strong&gt; e que eu estava vacilando muito por não ter lido antes o livro &lt;strong&gt;O Leão, a feiticeira é o guarda-roupa&lt;/strong&gt;. De longe a história mais difícil de ler foi &lt;strong&gt;Neuromancer&lt;/strong&gt;, de &lt;strong&gt;William Gibson&lt;/strong&gt;… tanto que nem consegui terminar de ler o segundo livro livro da série, &lt;strong&gt;Count Zero&lt;/strong&gt;. Ano que vem termino a trilogia.&lt;/p&gt;

&lt;p&gt;Meu ranking de melhores autores de ficção científica ficou assim:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Isaac Asimov&lt;/li&gt;
&lt;li&gt;Philip K. Dick&lt;/li&gt;
&lt;li&gt;Arthur C. Clark&lt;/li&gt;
&lt;li&gt;William Gibson&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Embora tenha lido pouca &lt;strong&gt;Fantasia&lt;/strong&gt;, consegui identificar bem o perfil de cada autor. Ano que vem quero ler mais Fantasia pra formar um ranking mais confiável. Mas por enquanto está assim:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;George R. R. Martin&lt;/li&gt;
&lt;li&gt;C. S. Lewis&lt;/li&gt;
&lt;li&gt;Tolkien&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Destaque para &lt;strong&gt;C. S. Lewis&lt;/strong&gt; que de longe, talvez, seja o meu autor predileto, exatamente por que é o autor mais eclético que li esse ano. O cara escreve sobre &lt;strong&gt;Religião&lt;/strong&gt;, &lt;strong&gt;Fantasia&lt;/strong&gt; e &lt;strong&gt;Ficção Científica&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Li tudo usando meu &lt;strong&gt;Kindle Paperwhite&lt;/strong&gt;. Ainda não aderi aos audiobooks por falta de conteúdo decente em português… Fiz alguns testes e eu me distraio muito quando estou ouvindo um audiobook em inglês. Contudo, vou tentar com mais afinco no próximo ano.&lt;/p&gt;

&lt;p&gt;Usei o &lt;a href="https://www.goodreads.com/friend/i?i=LTM1ODk3NjU4NTk6NDE5"&gt;GoodReads&lt;/a&gt; para fazer todo o acompanhamento das leituras e dos reviews. Eu não sei como não conhecia ele antes. Se tornou a minha rede social predileta depois do Twitter.&lt;/p&gt;

&lt;p&gt;Como objetivo extra, eu tentei escrever um review sobre cada livro lido. Fiz para quase todos, o que me ajudou a fixar as histórias e a criar uma opinião mais sincera sobre o livro.&lt;/p&gt;

&lt;p&gt;Para o próximo ano estou pensando em uma meta mais ousada de 25 livros. Vamos ver se consigo manter o ritmo.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://cdn-images-1.medium.com/max/800/1*vHoGvkxmDZVKRbXkiMiAtg.png" /&gt;&lt;/p&gt;

&lt;p&gt;Me siga no &lt;a href="https://www.goodreads.com/friend/i?i=LTM1ODk3NjU4NTk6NDE5"&gt;GoodReads&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Locaweb</title>
    <link rel="alternate" href="http://diegoeis.com/bye-bye-locaweb.html"/>
    <id>http://diegoeis.com/bye-bye-locaweb.html</id>
    <published>2016-12-26T22:00:00-02:00</published>
    <updated>2016-12-27T21:05:17-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Este foi meu último dia de trabalho na Locaweb. Foram 5 anos que pareceram poucos meses. A Locaweb é uma empresa tão incrível, que você não vê o tempo passar, e quando percebe, você já se tornou parte da família.&lt;/p&gt;

&lt;p&gt;Quando estava procurando uma nova empresa para morar, eu não queria ir para qualquer lugar. Eu queria ir para um lugar onde eu pudesse fazer a diferença, pudesse ajudar a empresa a crescer, a se modificar, a se transformar para a melhor e acima de tudo, um lugar onde eu pudesse continuar empreendendo, como sempre fiz. A Locaweb caiu como uma luva, e mais que isso, se tornou minha segunda casa.&lt;/p&gt;

&lt;p&gt;Nesses 5 anos a Locaweb, como empresa, mudou totalmente. Vi mudanças de diretorias, mudanças de gerências, integrantes de times saindo e entrando, projetos nascendo e morrendo. Aqui eu pude participar dos erros e dos acertos. Mas principalmente eu pude errar. Se eu puder te dar uma dica valiosa: encontre uma empresa onde te permita errar. Onde há espaço para você fazer aquela porcaria gigante, mas que também te de espaço para concertar o erro. Aqui na Locaweb foi e é permitido fazer isso… E foi assim que eu cresci muito.&lt;/p&gt;

&lt;p&gt;Como toda empresa, há problemas e isso é normal. Não dá para esperar que uma empresa com mais de 1200 funcionários, mais de 250 mil clientes, que fatura milhões por mês com vários produtos seja perfeita e não tenha problemas. Eu entrei na Locaweb sabendo que ela era uma empresa adorada e odiada pelos clientes. Eu perdi a conta de quantas vezes eu já ouvi desenvolvedores falarem muito mal da Locaweb pra mim. Normal. Se 1% dos clientes da Locaweb falam mal, são 2500 pessoas insatisfeitas. É gente pra caramba. Mas não é maior que os outros 248 mil pessoas e empresas, que usam satisfeitos os produtos e que nos ajudavam a crescer todos os dias com suas sugestões.&lt;/p&gt;

&lt;p&gt;Eu queria terminar agradecendo a todos os funcionários da Locaweb que eu tive contato. Não foram poucos. E isso era uma das coisas que eu mais gostava. Eu tinha contato com pessoas do RH, Marketing, Operações, Suporte, Diretoria, além das outras 3 empresas compradas pela Locaweb: a Eventials, Tray e AllIn. Construi relações importantes com todos eles.
Obrigado Locaweb por fazer parte da minha vida. Ganharam um amigo.&lt;/p&gt;

&lt;p&gt;Agora, começo um novo ciclo na Easynvest como Gestor de Produtos! Uma outra empresa incrível, da qual tenho o prazer de ser cliente e agora, além de me ajudar a investir melhor meu dinheiro, vão me ajudar muito mais a crescer como pessoa e profissional. Que alguém os proteja. ;-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>UX - reação é melhor que previsão</title>
    <link rel="alternate" href="http://diegoeis.com/ux-reagir-e-melhor-que-prever.html"/>
    <id>http://diegoeis.com/ux-reagir-e-melhor-que-prever.html</id>
    <published>2016-12-21T22:00:00-02:00</published>
    <updated>2016-12-22T23:35:29-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Entender o usuário é algo difícil. Você pode perceber isso facilmente comparando a sua forma de usar algum serviço de internet, digamos o Facebook, com qualquer outra pessoa ao seu redor. Provavelmente você tem um costume totalmente diferente de navegar, consumir conteúdo, comentar etc. Pessoas diferentes, usam de formas diferentes um mesmo produto e isso é totalmente normal. É por isso que tentar prever cenários para desenvolver um produto para internet é algo complicado.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But in the end, for something this complicated, it&amp;rsquo;s really hard to design products by focus groups. A lot of times, people don&amp;rsquo;t know what they want until you show it to them. &amp;ndash; Steve Jobs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para tentar diminuir essa dificuldade, é costume antigo entre os profissionais de UX entrevistarem os usuários (além de fazer outras cerimônias) afim de tentar entender qual a sua perspectiva do usuário sobre o produto/site. Geralmente, com um bom papo, você consegue pescar uma série de pontos importantes afim de tentar adiantar a solução de problemas de uso. Métodos assim, podem não ser tão eficazes por vários motivos, aqui vão alguns deles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Geralmente o usuário não sabe se expressar.&lt;/strong&gt; Muitas vezes, o que o usuário fala não é exatamente o problema real. Você precisa conhecer muito bem seu projeto para conseguir traduzir qual o sentido real do problema para saber onde atacar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Entrevistas com os usuários dependem do engajamento do usuário.&lt;/strong&gt; Fazer com o que o usuário saia da sua casa para ir até você é uma tarefa difícil e muito incomoda. Para compensar isso, alguns inventam de pagar ou dar alguma recompensa para o usuário, por um trabalho, que ao meu ver, não é de responsabilidade do usuário, mas da pessoa que está planejando o projeto. Já vi pessoas se prepararem uma semana para um encontro com os usuários, mas que nenhum usuário apareceu. As vezes a gente precisa ir até onde o usuário está, o que é ruim, por que o ambiente onde ele trabalha tem muitas distrações.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testes guiados são importantes, mas os resultados são danificados pelo ambiente estranho e pela ansiedade dos usuários.&lt;/strong&gt; Você já parou do lado de um designer ou de um programador enquanto ele executava uma tarefa? Cara, é desconfortável tem um papagaio de pirata &amp;ldquo;fiscalizando&amp;rdquo; o que você está fazendo. Geralmente os usuários não executam suas tarefas naturalmente, como eles executariam em dias comuns. Quando usamos frequentemente um produto, nós nos acostumamos com a interface, fluxo e outras ações. Em entrevistas, é inevitável que o usuários sinta que está sendo avaliado. Achar o contrário é se enganar.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Você não vai obter respostas reais com perguntas meia boca.&lt;/strong&gt; É muito difícil obter boas respostas com perguntas como: &amp;ldquo;Qual a primeira ação que você faria nessa tela?&amp;rdquo; ou &amp;ldquo;Qual a primeira impressão sobre essa tela?&amp;rdquo;. Há uma série de técnicas para tornar essas &lt;a href="http://www.uxdesign.blog.br/pesquisa-com-usuarios/perguntas-a-serem-evitadas-em-pesquisa-com-usuarios/"&gt;entrevistas mais inteligentes&lt;/a&gt;, mas infelizmente isso não é tão fácil de executar. Conto nos dedos os UXzes que vi fazerem isso da maneira correta.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tenho certeza de que você pode citar vários outros cenários parecidos, onde usamos várias técnicas e cerimonias na tentativa de prever qual seria a melhor solução para o usuário, mas que na real, não dão respostas que possamos usar &lt;strong&gt;de verdade&lt;/strong&gt; para solucionar os problemas do produto.&lt;/p&gt;

&lt;p&gt;Outro dia vi uma apresentação com a seguinte frase: &lt;strong&gt;Evite Fails no projeto e economize tempo&lt;/strong&gt;. Para mim, esse é o típico comentário comum de UX que não tem a mentalidade ágil e que não sabe trabalhar com pequenas entregas incrementais, que atrasa a entrega de valor para o cliente porque quer entregar &amp;ldquo;algo completo&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Bom, minha sugestão para esse tipo de UX: &lt;strong&gt;pare de tentar prever o que seria melhor para o usuário e tente reagir à experimentos e aos dados de uso real de produção&lt;/strong&gt;. Colocar no ar uma mudança pequena e medir o comportamento dos usuários, ajuda muito mais a entender qual será o próximo passo. É um erro tentar prever o que seria melhor para um produto se baseando na opinião de pessoas, que embora sejam seus clientes diretos, tem expectativas e níveis de conhecimento diferentes.&lt;/p&gt;

&lt;h2&gt;Entrega rápida de valor&lt;/h2&gt;

&lt;p&gt;Essa previsão mentirosa me leva a outro assunto: entregas pequenas são melhores que entregas grandes.
Planejar grandes mudanças de uma vez é furada. Qualquer um sabe disso. Mudanças pequenas são controláveis, causam menos impacto, são fáceis de medir os acertos e os erros. Existem exceções, claro, por exemplo em casos onde o produto precisa de um redesign completo e o realinhamento progressivo de interface é impossível. Há produtos antigos que não tem a possibilidade de fazer um realinhamento ao longo do tempo e por isso o redesign completo, feito de uma vez, é a única opção. Mas tirando essas exceções, entregas pequenas, funcionais e incrementais é o mais indicado.&lt;/p&gt;

&lt;p&gt;Eu sei que é difícil para um UX pensar dessa forma. A maioria dos UXzes que eu já trabalhei prefere pensar na funcionalidade por inteiro. Eles têm a falsa impressão de que entregar algo pequeno, mesmo que seja funcional, é o mesmo que entregar algo incompleto. Não entra na cabeça deles entregar um pedacinho em vez da obra completa. Eles podem fazer um pedaço pequeno, porém essencial da funcionalidade, medir o comportamento do usuário e aí sim tomar a decisão de qual será o próximo passo. Transformação e adaptação é o nome do jogo.&lt;/p&gt;

&lt;p&gt;Em um dos últimos projetos em que trabalhei, havia um UX com esse perfil mais antiquado. Deixamos de entregar mudanças importantes de interface do painel do usuário, por que o UX queria fazer um estudo para mudar a ordem das opções no menu (!). Ele ligou para vários clientes e agendou um dia de &amp;ldquo;bate papo&amp;rdquo; com eles. Se preparou dias, movimentou P.O., marketing, outros UXzes&amp;hellip; Comprou comida, agendou sala. Ninguém apareceu. Final da história: o time de desenvolvimento ficou 4 meses com a nova versão da interface no forno e o usuário não recebeu uma grande melhoria no seu produto, tudo por conta de uma simples mudança no menu.&lt;/p&gt;

&lt;p&gt;O que poderia ter sido feito: era possível ter subido a nova interface, com vários triggers para mapear o comportamento do usuário, recolhendo dados importantes, tentando descobrir quais os problemas do menu atual e planejando as possíveis soluções da próxima versão, entregando de forma incremental as novas features. Poderíamos ter feito análises do comportamento do usuário usando ferramentas como o Hotjar e sistemas similares que gravam o movimento e as ações do mouse do usuário na interface do produto. Meia hora assistindo esses vídeos já nos trariam respostas realmente importantes sobre o que é necessário modificar no menu ou em qualquer outra parte da interface.&lt;/p&gt;

&lt;p&gt;Mas há um ponto para tomar cuidado em entregas incrementais: a feature precisa ser terminada. Ela precisa ter um ponto onde possamos dizer que ela está &amp;ldquo;completa&amp;rdquo;. A abordagem de entregas incrementais pode virar um ciclo infinito e a feature pode mudar muitas vezes durante um longo período de tempo. O outro ponto é que se o P.O. não priorizar as outras tarefas da feature, ela realmente pode ficar incompleta, embora fique totalmente funcional.&lt;/p&gt;

&lt;p&gt;Moral da história: prefira tomar decisões baseadas em dados ao invés de tentar prever as ações do usuário. Dados são fatos. Usuários, infelizmente, mentem&amp;hellip; e há um monte de UXzes que caem nessas mentiras.&lt;/p&gt;

&lt;p&gt;PS.: Eu não estou dizendo que cerimônias, entrevistas com o usuário e a utilização de técnicas milagrosas especiais não são válidas e inúteis. Elas devem ser aplicadas, mas não devem ser a última palavra para definir as ações do time.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Hello World com React desde o rascunho</title>
    <link rel="alternate" href="http://diegoeis.com/hello-world-com-react-desde-o-rascunho.html"/>
    <id>http://diegoeis.com/hello-world-com-react-desde-o-rascunho.html</id>
    <published>2016-10-22T22:00:00-02:00</published>
    <updated>2016-12-22T23:28:04-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Há muito tempo eu queria fazer um Hello World com React, mas nunca tinha tempo por que eu mudei de área fazem uns 3 anos, ficando mais na parte de gestão de produtos e times, deixando totalmente o desenvolvimento e a escrita de código. Por isso, senti na pele o que os iniciantes sentem quando precisam fazer um simples Hello World de uma tecnologia nova. São tantos artigos falando coisas diferentes, usando setups diferentes, na sua maioria complexos e que não explicam as coisas com simplicidade.&lt;/p&gt;

&lt;p&gt;É por isso que eu tenho procurado conteúdo fácil para poder investir um tempo e aprender pelo menos o básico e o início do React. Eu li uma série de fontes pela internet, que você pode conferir no final do artigo, além de um curso grátis, muito, mas muito bem feito pelo &lt;a href="http://jscasts.teachable.com/"&gt;Matheus Lima no JSCasts&lt;/a&gt;. Esse é um artigo baseado em todas essas fontes. Tentei abstrair toda as inutilidades que alguém não precisa aprender logo que está iniciando. Espero que tenha cumprido com o objetivo.&lt;/p&gt;

&lt;h2&gt;Conceitos do React e Introdução&lt;/h2&gt;

&lt;p&gt;O React foi pensado em como podemos componentizar nossos elementos, de forma que eles sejam independentes, mas reutilizáveis. Pensa em um componente como se fosse um widget ou um módulo. Se ficar mais fácil, pense que um componente é um pedaço de HTML, CSS, JS e os poucos dados que irão popular esse pedaço do layout.&lt;/p&gt;

&lt;p&gt;Sem entrar na polêmica de modularização e componentização no JS, atualmente, nós organizamos na pior das hipóteses - e mais comum também -, os componentes como partes separadas de códigos. Você pega um pedaço de código HTML, coloca numa determinada página, que é formatada com CSS e manipulada com JS. O código que estrutura, formata e manipula seu componente está separado nesses três arquivos de HTML, CSS e JS. No React, o conceito é mais simples, onde unificamos o HTML dentro do JS, o que no React chamamos de JSX.&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/iniciando-react/react-component.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Perceba que na imagem acima - &lt;a href="https://dribbble.com/shots/1262636-To-Do-Dashboard/attachments/172917"&gt;peguei o layout de exemplo daqui&lt;/a&gt; - cada retângulo colorido tem um componente pai, com seus componentes internos,  que chamamos de componentes filhos. Podemos, então, criar um componente chamado &lt;code&gt;navBar&lt;/code&gt; com um componente filho chamado &lt;code&gt;userInfo&lt;/code&gt;, que conterá as informações do usuário. O nosso componente &lt;strong&gt;pai&lt;/strong&gt;, guarda estado dos dados que usaremos nos componentes filhos. O &lt;strong&gt;pai&lt;/strong&gt; compartilha os dados com os filhos por meio de atributos. Nesse exemplo, a &lt;code&gt;navBar&lt;/code&gt; iria compartilhar as informações do usuário logado para o componente filho &lt;code&gt;userInfo&lt;/code&gt;. Esta hierarquia de pai e filho faz com que o gerenciamento de dados seja simples, por que nós sabemos exatamente onde os dados estarão, não causando confusão usando esses dados erroneamente em outros lugares.&lt;/p&gt;

&lt;p&gt;O JSX é como o ReactJS cria os componentes em JavaScript. Você vai escrever HTML (quase) normal dentro do próprio JS, o ReactJS, por sua vez, vai se encarregar de traduzir esse HTML para JavaScript, que vai renderizar um elemento no DOM. Se você tem o código &lt;code&gt;&amp;lt;h1&amp;gt;Titulo&amp;lt;/h1&amp;gt;&lt;/code&gt;, o JSX vai se transformar em &lt;code&gt;React.createElement(&amp;#39;h1&amp;#39;, null, &amp;#39;Titulo&amp;#39;);&lt;/code&gt; antes de ser executado pelo browser. Escrever com esse HTML do React (JSX), facilita a leitura e você diminui a curva de aprendizado. &lt;/p&gt;

&lt;p&gt;Você já deve ter ouvido sobre o &lt;strong&gt;Virtual DOM&lt;/strong&gt;. O Virtual DOM é a árvore de componentes que o ReactJS gera para que o browser renderize na tela. Pra melhorar a performance, o ReactJS gera todo o HTML (baseado em JSX e transformado em JavaScript) na memória antes de renderizar para o usuário. Além disso, ele fica vigiando esse Virtual DOM procurando por alterações. Quando algo é alterado, ele muda apenas o que foi alterado e não todo o HTML. &lt;/p&gt;

&lt;h2&gt;Setup do projeto&lt;/h2&gt;

&lt;p&gt;Como todo o projeto, necessitamos fazer um setup inicial, preparando o ambiente e iniciando parte do código. Nesse setup vamos começar criando o projeto com NPM, depois vamos criar arquivos de configuração do Webpack e também o arquivo &lt;strong&gt;index.html&lt;/strong&gt;, que é onde vamos mostrar nossa App.&lt;/p&gt;

&lt;h3&gt;NPM&lt;/h3&gt;

&lt;p&gt;Como gerenciador de pacotes, vamos usar o NPM. Por isso, abra seu terminal predileto e veja os comandos abaixo. Esses comandos vão criar uma pasta para o projeto (eu já estou na minha pasta publica, onde coloco meus projetos para serem acessados via localhost), depois eu inicio o NPM e aí instalo dois pacotes iniciais &lt;strong&gt;react&lt;/strong&gt; e &lt;strong&gt;react-dom&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;mkdir meu-projeto
&lt;span class="gp"&gt;$ &lt;/span&gt;npm install --save react react-dom
&lt;span class="gp"&gt;$ &lt;/span&gt;npm init &lt;span class="c"&gt;# aperte enter em tudo que vier&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Agora, dentro da pasta &lt;strong&gt;meu-projeto&lt;/strong&gt; deve haver um &lt;strong&gt;package.json&lt;/strong&gt; que o NPM instalou. Vamos instalar agora o Webpack. O Webpack é o que vai juntar todos os nossos módulos, compilar nosso CSS e etc.&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;meu-projeto
&lt;span class="gp"&gt;$ &lt;/span&gt;npm install --save-dev webpack
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Nós vamos instalar o &lt;strong&gt;webpack&lt;/strong&gt; apenas em desenvolvimento, por que, obviamente vamos usar o código que ele gerar em produção. Mas vamos aproveitar para instalá-lo também globalmente, por que vamos precisar rodar o comando &lt;code&gt;webpack&lt;/code&gt; para gerar nosso bundle:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$  &lt;/span&gt;npm install webpack -g
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Seu &lt;strong&gt;package.json&lt;/strong&gt; tem que ficar mais ou menos assim:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s2"&gt;"name"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"curso-react-matheus"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"version"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"description"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"main"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"scripts"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"test"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"echo \"Error: no test specified\" &amp;amp;&amp;amp; exit 1"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"author"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"license"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s2"&gt;"dependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"react"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^15.3.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"react-dom"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^15.3.2"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s2"&gt;"devDependencies"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"webpack"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"^1.13.2"&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Config do Webpack&lt;/h3&gt;

&lt;p&gt;O webpack é um empacotador de código focado em módulos. Você pode ver com mais detalhes sobre o que é o webpack &lt;a href="http://tableless.com.br/introducao-ao-webpack/"&gt;nesse artigo do Leo Cavalcante no Tableless&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Como já instalamos anteriormente o webpack com o NPM, vamos criar agora um &lt;strong&gt;webpack.config.js&lt;/strong&gt;. Aqui é onde vamos ter as configurações do Webpack. O Matheus, em seu vídeo, simplificou ao máximo as explicações que não ficasse confusa, tendo que explicar Redux, Flux, ES6 e etc, por isso, vamos fazer o mesmo aqui. Assim facilita seu aprendizado.&lt;/p&gt;

&lt;p&gt;O código do config do Webpack é esse aqui:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"./app/App.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"public/bundle.js"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;module&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;loaders&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;test&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="sr"&gt;js$/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;exclude&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/node_modules/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'babel'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;presets&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;O Matheus explicou tim tim por tim tim cada uma dessas linhas no segundo vídeo do curso dele. Por enquanto, você só precisa saber o seguinte: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;entry: &amp;quot;./app/App.js&amp;quot;,&lt;/code&gt; vai ler o arquivo App.js, gerando um &lt;strong&gt;output&lt;/strong&gt; chamado &lt;strong&gt;bundle.js&lt;/strong&gt;. Aproveite para criar agora o &lt;strong&gt;App.js&lt;/strong&gt;, dentro de uma pasta &lt;strong&gt;app&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;O React usa o conceito de Loaders. Não vamos ver isso agora. Mas no bloco &lt;code&gt;loaders&lt;/code&gt; desse código, ele vai testar todos os arquivos &lt;strong&gt;.js&lt;/strong&gt;, menos a pasta &lt;strong&gt;node_modules&lt;/strong&gt;, usando o &lt;strong&gt;babel&lt;/strong&gt; para fazer o transpiler. Ali nos presets, estamos dizendo que vamos usar react. Se fossemos usar ES6 no código, nós colocaríamos também ali no chave &lt;code&gt;presets&lt;/code&gt;, para que o babel soubesse que ele também teria que pegar código ES6 para poder transpor para código conhecido.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Agora, para que o babel funcione, vamos instalá-lo também via NPM:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;npm install --save-dev babel-core babel-loader babel-preset-react
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;E por enquanto, é isso que você precisa saber.&lt;/p&gt;

&lt;h3&gt;index.html&lt;/h3&gt;

&lt;p&gt;Todo os projetos React tem um &lt;strong&gt;index.html&lt;/strong&gt; que faz a conexão com o nosso código. Esse &lt;strong&gt;index.html&lt;/strong&gt; é onde o App vai aparecer e ele deve ficar dentro da pasta &lt;strong&gt;public&lt;/strong&gt;. Crie então uma pasta &lt;strong&gt;public&lt;/strong&gt; e dentro coloque o arquivo &lt;strong&gt;index.html&lt;/strong&gt;. O código é mais ou menos esse. Também tendo em mente a simplicidade da explicação. Não inserirmos nada de outro mundo aqui:&lt;/p&gt;
&lt;div class="highlight html"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"pt-br"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"bundle.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;O div APP é onde vamos renderizar a aplicação. É quase que padrão usar o nome &lt;code&gt;app&lt;/code&gt; ali. Mas você pode colocar qualquer outra coisa se quiser.&lt;/p&gt;

&lt;p&gt;Depois chamamos o JavaScript da nossa app, que vai estar tudo contido num arquivo só, que as vezes se chama &lt;code&gt;all.js&lt;/code&gt;, outras &lt;code&gt;bundle.js&lt;/code&gt;, outros &lt;code&gt;app.js&lt;/code&gt;. Tanto faz. Vamos usar &lt;code&gt;bundle.js&lt;/code&gt;, só para não ficar diferente dos artigos que li e do vídeo que o Matheus fez. Assim quando você for procurar mais referências, não fica confuso. E pronto.&lt;/p&gt;

&lt;h2&gt;App.js e Hello World&lt;/h2&gt;

&lt;p&gt;Vamos começar a nossa App fazendo dois &lt;code&gt;require&lt;/code&gt;. O require vai importar para nosso código o &lt;strong&gt;react&lt;/strong&gt; e o &lt;strong&gt;react-dom&lt;/strong&gt; que instalamos aquela hora com NPM. Abra seu &lt;strong&gt;App.js&lt;/strong&gt; e escreva:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reactDOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react-dom'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react-dom&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Com esses dois pacotes importados, vamos agora colocar um código inicial. Nesse código vamos usar o &lt;code&gt;reactDOM&lt;/code&gt;, que vai pegar nosso código HTML escrito em JSX e jogar naquele div com id &lt;code&gt;app&lt;/code&gt; que fizemos no &lt;strong&gt;index.html&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reactDOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react-dom'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react-dom&lt;/span&gt;

&lt;span class="nx"&gt;reactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="nx"&gt;World&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;, document.getElementById&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;'app'&lt;/span&gt;&lt;span class="se"&gt;))&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Pra ver funcionando, lá no seu terminal, rode o comando abaixo na pasta do projeto:&lt;/p&gt;
&lt;div class="highlight shell"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$ &lt;/span&gt;webpack -w
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Ele vai gerar um bundle todas as vezes que você salvar algo no projeto. Você poderá acessar o &lt;strong&gt;index.html&lt;/strong&gt; pelo seu browser. No meu Mac eu acessei nesse endereço &lt;strong&gt;http://localhost/curso-react-matheus/public/index.html&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;O Tutorial puro do ReactJS sugere rodar um server. Exatamente por que eles não mostram o processo usando Webpack. Contudo, se quiser, segue aí as instruções. &lt;a href="https://github.com/reactjs/react-tutorial/#to-use"&gt;Entre nesse link e rode um dos servidores&lt;/a&gt;. É só baixar um dos arquivos da linguagem que mais te agrada e rodar o comando para que o servidor rode.&lt;/p&gt;

&lt;p&gt;Crie uma pasta, baixe o arquivo preferencial e rode o comando correspondente. Ex.: &lt;code&gt;php server.php&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sugiro que fique conosco aqui no Webpack, assim você não se perde no processo. Nesse momento, você já deve ter rodado seu primeiro &lt;strong&gt;Hello World&lt;/strong&gt; com React, usando Webpack.&lt;/p&gt;

&lt;h3&gt;Importando seu primeiro módulo&lt;/h3&gt;

&lt;p&gt;Para importar seu primeiro módulo, lá no &lt;strong&gt;App.js&lt;/strong&gt;, vamos criar uma variável que faz a importação do nosso componente. O arquivo desse componente estará na pasta &lt;strong&gt;components&lt;/strong&gt;, dentro da pasta &lt;strong&gt;App&lt;/strong&gt;. A estrutura de pastas fica assim:&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/iniciando-react/folders-react.png" /&gt;&lt;/p&gt;

&lt;p&gt;O seu App.js fica assim:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;reactDOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react-dom'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// importa a lib react-dom&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;MeuComponente&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'./components/MeuComponente.js’);

reactDOM.render(&amp;lt;MeuComponente /&amp;gt;, document.getElementById('&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;h3&gt;Criando seu primeiro componente&lt;/h3&gt;

&lt;p&gt;Dentro da pasta &lt;strong&gt;components&lt;/strong&gt;, crie um arquivo chamado &lt;strong&gt;MeuComponente.js&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; Como boas práticas e uma convenção comum nos projetos, nós colocamos o nome do arquivo do componente como sendo o mesmo nome do componente dentro do código. O nome do arquivo poderia ser diferente do nome do componente, mas aí o risco de bagunça seria enorme. Por isso, mantenha o nome do arquivo do componente sendo igual ao nome do componente no código. &lt;/p&gt;

&lt;p&gt;Voltando… dentro desse componente você vai escrever o código básico de todo o componente, que é o código que segue abaixo:&lt;/p&gt;
&lt;div class="highlight javascript"&gt;&lt;table style="border-spacing: 0"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="gutter gl" style="text-align: right"&gt;&lt;pre class="lineno"&gt;1
2
3
4
5
6
7
8
9
10
11&lt;/pre&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// importa a lib react&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;MeuComponente&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createClass&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;teste&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;MeuComponente&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Todos os componentes react vão ter esse código. Primeiro ele importa a lib do React. Depois nós criamos uma classe (&lt;code&gt;React.createClass&lt;/code&gt;) onde construíremos nosso Componente. E aí, exportamos (&lt;code&gt;module.exports = MeuComponente&lt;/code&gt;) nosso Componente para importá-lo em outras partes do projeto, como fizemos no App.js. &lt;/p&gt;

&lt;p&gt;Dentro a classe do seu componente, perceba que há uma função &lt;strong&gt;render&lt;/strong&gt;. Essa função irá transformar o código JSX que estiver ali dentro no seu componente e irá renderizá-la na tela.&lt;/p&gt;

&lt;p&gt;Perceba uma curiosidade: Por que precisamos de um parênteses em volta do return? O JavaScript insere o sinal de ponto-virgula (;) automaticamente. Sem os parênteses, o JavaScript ignoraria as linhas seguintes e não retornaria valor algum. Se o JSX começa na mesma linha que o return, então os parênteses não são necessários.&lt;/p&gt;

&lt;p&gt;Se você for no seu browser e mudar o texto do seu componente, você vai perceber que nosso componente está funcionando! ;-D&lt;/p&gt;

&lt;p&gt;&lt;img src="assets/images/iniciando-react/gif-react.gif" /&gt;&lt;/p&gt;

&lt;p&gt;Bom, vou ficando por aqui. O objetivo era apenas fazer um setup rápido, para você conseguir inserir pelo menos um componente e ver as coisas mudando na tela. Talvez as coisas tenham ficado mais claras para você agora, assim como ficaram para mim depois desse estudo. Sugiro que você veja os links abaixo para aprofundar mais seus estudos. Tem conteúdo em ingles e também conteúdo em português. Vá fundo!&lt;/p&gt;

&lt;h2&gt;Leitura recomendada:&lt;/h2&gt;

&lt;p&gt;Algumas leituras eu perdi, outras estão por aí. Todos esses links me ajudaram a entender um bocado sobre o setup do React, seus módulos, inserir CSS, modularização e etc. Praticamente todos eles explicam as mesmas coisas, com palavras diferentes detalhes diferentes. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://facebook.github.io/react/tutorial/tutorial.html"&gt;Documentação do React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tutorialspoint.com/reactjs/reactjs_environment_setup.htm"&gt;React Environment Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.andrewray.me/reactjs-for-stupid-people/"&gt;React for Stupid People&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jamesknelson.com/learn-raw-react-no-jsx-flux-es6-webpack/"&gt;Learn React by itsel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jviereck/modularise-css-the-react-way-1e817b317b04"&gt;Modularise CSS the React way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hugogiraudel.com/2015/06/18/styling-react-components-in-sass/"&gt;Style React Components in SASS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://survivejs.com/react/advanced-techniques/styling-react/"&gt;Style React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://buildwithreact.com/tutorial/components"&gt;http://buildwithreact.com/tutorial/components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://jscasts.teachable.com/"&gt;Curso do Matheus Lima em Português&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hugobessa.com.br/2015/01/17/comecando-com-react/"&gt;Começando com React - Hugo Bessa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.jackcallister.com/2015/01/05/the-react-quick-start-guide.html"&gt;The React Quick Starter Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/danawoodman/9cfddb1a0c934a35f31a"&gt;React Hello World Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tylermcginnis.com/react-js-tutorial-pt-1-a-comprehensive-guide-to-building-apps-with-react-js-8ce321b125ba#.wn4e2ymf3"&gt;React.js Tutorial Pt 1: A Comprehensive Guide to Building Apps with React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;GitHub do projeto React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/tableless/organizando-uma-aplicação-com-react-5b8ea9075596#.3q8sxog55"&gt;Organizando uma aplicação com React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ignit.io/react-native-construindo-apps-nativos-com-javascript-parte-1-37af2fbcde84#.muc6c8dyv"&gt;React Native — Construindo Apps Nativos com Javascript (parte 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fnando/react-starter-pack"&gt;Starter Pack para React do Nando&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Review de Livro - TED Talks - O Guia Oficial do TED para falar em Publico</title>
    <link rel="alternate" href="http://diegoeis.com/review-de-livro-ted-talks-o-guia-oficial-do-ted-para-falar-em-publico.html"/>
    <id>http://diegoeis.com/review-de-livro-ted-talks-o-guia-oficial-do-ted-para-falar-em-publico.html</id>
    <published>2016-10-20T22:00:00-02:00</published>
    <updated>2016-12-22T23:28:04-02:00</updated>
    <author>
      <name>Diego Eis</name>
    </author>
    <content type="html">&lt;p&gt;Ganhei do &lt;a href="http://twitter.com/phsilbr"&gt;Pablo Silva&lt;/a&gt; o livro &lt;strong&gt;TED Talks: O Guia Oficial do TED para falar em público&lt;/strong&gt;. Aqui segue minhas anotações do livro. Não anotei tudo, exatamente se não fica sendo um spoiler gigante. Mas tem um resumo no &lt;a href="http://fourminutebooks.com/talk-like-ted-summary/"&gt;Four Minutes Books&lt;/a&gt;. ;-)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Se você sabe conversar com amigos em uma mesa de jantar, também sabe falar em público&lt;/li&gt;
&lt;li&gt;Por mais que você ache que não consegue falar em público, existem medidas para reverter esse quadro&lt;/li&gt;
&lt;li&gt;Você não precisa ser alguém diferente, você precisa ser você mesmo. &lt;/li&gt;
&lt;li&gt;Não tente falar diferente do que você realmente fala com públicos pequenos.&lt;/li&gt;
&lt;li&gt;A &lt;strong&gt;competência comunicativa&lt;/strong&gt; não é um extra opcional reservado a umas poucas pessoas&lt;/li&gt;
&lt;li&gt;Por causa da tecnologia, hoje não é necessário falar na frente de milhares de pessoas ao mesmo tempo para exercer influência&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;a obrigação número um de um palestrante é reconstruir na mente de seus ouvintes algo que lhe importa&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A ideia que você quer passar deve ser algo capaz de mudar a visão de mundo das pessoas&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Estilo sem conteúdo é horrível.&lt;/li&gt;
&lt;li&gt;Para se conhecer melhor, você precisa ter conversas francas com aqueles que vivem com você, sobre como você. Eles conhecem algumas características sobre você, melhor do que voce mesmo&lt;/li&gt;
&lt;li&gt;a linguagem só produz sua magia que do partilhada entre falante e ouvinte. Os termos precisam ser previamente conhecidos pelos ouvintes e profundamente dominados pelos falantes&lt;/li&gt;
&lt;li&gt;Você só pode usar as ferramentas que a plateia tem acesso.&lt;/li&gt;
&lt;li&gt;Se você usar seus termos, seus conceitos, seus valores, sua palestra não terá sucesso&lt;/li&gt;
&lt;li&gt;Uma pesquisa de 1967 feita pelo Professor Albert Mehrabian diz que apenas 7% da eficácia da comunicação decorrem da linguagem, enquanto 38% dependem do tom de voz e 55% da linguagem corporal &lt;/li&gt;
&lt;li&gt;No entanto a essência de uma palestra depende fundamentalmente das palavras &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;o palestrante deve fazer uma doação a seus ouvintes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Excesso de temas é igual a sub exposição.&lt;/li&gt;
&lt;li&gt;Divagações são comuns em palestras ruins. Não enrole, mostre uma direção para a plateia sem divagar antes sobre qualquer outro assunto. Exemplo: “estive pensando no que falar pra vocês quando estava dirigindo pra cá&amp;hellip;”&lt;/li&gt;
&lt;li&gt;Falar sobre a complexidade da organização da sua equipe, empresa, produto etc pode ser interessante pra quem está trabalhando nesses locais, mas não é para plateia. Em geral, palestras assim são tediosas. &lt;strong&gt;Concentre-se na natureza do seu trabalho, não como ele está organizado ou nos seus produtos&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;você não copia inspiração de outra pessoa. Você não produz inspiração. A inspiração é como o amor, você não alcança quando decide buscá-lo. Não tente controlar a motivação ou a inspiração da plateia. Deixe que isso surja espontaneamente de acordo com seu assunto e sua personalidade &lt;/li&gt;
&lt;li&gt;Tenha uma &lt;strong&gt;linha mestra&lt;/strong&gt; bem definida. Uma linha mestra é como uma manchete. Ela deve ser a primeira coisa que a plateia precisa ouvir, para atrair a atenção e a essência do assunto a ser debatido&lt;/li&gt;
&lt;li&gt;A linha mestra define o que você quer dizer. É o tema que une os elementos narrativos. É como o laço do presente que é amarrado antes do presente estar pronto. &lt;/li&gt;
&lt;li&gt;o jeito errado de condensar sua palestra é tentar falar de todos os assuntos que você acha pertinente, com medo de algo ficar de fora.&lt;/li&gt;
&lt;li&gt;Se você tenta falar de tudo, com tempo limitado pra cada um Dos temas, sua palestra fica superficial. Tente separar poucos assuntos dentro do seu tema para se aprofundar, instigando a curiosidade do público.&lt;/li&gt;
&lt;li&gt;Para uma palestra usando &lt;strong&gt;persuasão&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;injete algum humor no início&lt;/li&gt;
&lt;li&gt;Acrescente um caso real&lt;/li&gt;
&lt;li&gt;De exemplos eloquentes&lt;/li&gt;
&lt;li&gt;Busquei aval de terceiros&lt;/li&gt;
&lt;li&gt;Use recursos visuais impactantes&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
